<?xml version="1.0" encoding="utf-8"?>

<mx:HBox xmlns:fx="http://ns.adobe.com/mxml/2009"
         xmlns:s="library://ns.adobe.com/flex/spark"
         xmlns:mx="library://ns.adobe.com/flex/mx"
         width="100%" height="100%" xmlns:comps="yssoft.comps.*"
         initialize="ini()">
    <fx:Script>
		<![CDATA[
        import mx.collections.ArrayCollection;
        import mx.controls.CheckBox;
        import mx.controls.dataGridClasses.DataGridColumn;
        import mx.events.CollectionEvent;
        import mx.events.DataGridEvent;
        import mx.formatters.DateFormatter;
        import mx.rpc.events.ResultEvent;
        import mx.utils.ObjectUtil;

        import yssoft.comps.ConsultTextInput;
        import yssoft.frameui.formopt.OperDataAuth;
        import yssoft.models.ConstsModel;
        import yssoft.tools.AccessUtil;
        import yssoft.tools.CRMtool;

        private var departxml:XML = new XML();
        private var personxml:XML = new XML();

        private var curSql:String = "";//记录当前执行的sql，列表对应的sql
        private var curIfu:int = 0;//记录当前功能注册码，准确说是相关功能内码
        private var curIifun:int = 0;//记录当前功能注册码
        private var curIpe:int = 0;//记录当前用户内码
        private var curIro:int = 0;//记录当前角色内码
        private var curTab:String = "";//记录当前数据集
        private var curIde:int = 0;//记录当前人员对应的部门内码

        [Bindable]
        public var dgArr:ArrayCollection = new ArrayCollection();//DataGrid数据集

        private var fzperson:String = "";//刚查出来的负责人员选中的id
        private var xgperson:String = "";	//刚查出来的相关人员选中的id

        /* 权限类型 */
        [Bindable]
        public var authList:ArrayCollection = new ArrayCollection([
            {label: "组织查询权限", data: 1},
            {label: "组织修改权限", data: 2},
            {label: "组织删除权限", data: 3}
        ]);


        public function ini():void {
            AccessUtil.remoteCallJava("AdvancedAuthDest", "getAllData", callBackHandler);
            onCreateConsult();
        }

        public function callBackHandler(evt:ResultEvent):void {

            if (evt.result) {

                var obj:Object = evt.result;
                departxml = new XML(evt.result.departXml);
                personxml = new XML(evt.result.personXml);

                for each(var node:XML in departxml..node) {
                    node.appendChild(this.personxml.node.(@idepartment == node.@iid));
                }

                this.treeUser.dataProvider = departxml;
            }

        }

        public function treeUser_click():void {

            lblMessage.text = "";
            curIpe = treeUser.selectedItem.@iid;
            curIde = treeUser.selectedItem.@idepartment;

            if (curIde == 0)
                return;

            var rolename:String = treeUser.selectedItem.@rolename;

            if (rolename != "") {

                this.listRole.dataProvider = onGetList(treeUser.selectedItem.@roleid + "", treeUser.selectedItem.@rolename + "");
            }
            else
                this.listRole.dataProvider = null;

            if (curIfu != 0)onIniData();//获取数据
        }

        /* 获取隶属角色列表的数据源，拆分合并操作 */
        private function onGetList(roleiids:String, rolename:String):ArrayCollection {

            var arrReturn:ArrayCollection = new ArrayCollection();
            var item:Object = {};

            var arrRoleIids:Array = roleiids.split(",");
            var arrRoleName:Array = rolename.split(",");

            for (var i:int; i < arrRoleIids.length; i++) {

                arrReturn.addItem({iid: arrRoleIids[i], cname: arrRoleName[i]});

            }

            return arrReturn;

        }

        /* 创建参照控件并获取数据源 */
        private function onCreateConsult():void {

            var consult1:ConsultTextInput = new ConsultTextInput();

            consult1.iid = 271;
            consult1.bindDataEnabled = true;
            consult1.bindValueField = "ifuncregedit";
            consult1.bindLabelField = "cname";
            consult1.visibleIcon = true;
            consult1.editable = true;
            consult1.showBorder = true;
            consult1.width = 150;
            consult1.borderStyle = "inset";
            hbBus.addChild(consult1);

            consult1.addEventListener("searchChange", yesConsultListBack);
        }

        //参照返回时处理列表信息
        private function yesConsultListBack(event:Event):void {

            if (curIpe == 0) {
                CRMtool.tipAlert("请首先选择人员！");
                return;
            }

            var consult:ConsultTextInput = this.hbBus.getChildAt(1) as ConsultTextInput;

            var selectData:Object = consult.data;//选中记录集

            curSql = selectData[0].csql1 + "";
            curIfu = selectData[0].outifuncregedit;
            curTab = selectData[0].ctable + "";
            curIifun = selectData[0].ifuncregedit;

            var cfieldArr:Array = (selectData[0].cfield + "").split(",");
            var cfieldcaptionArr:Array = (selectData[0].cnewcaption + "").split(",");

            onIniDataGrid(cfieldArr, cfieldcaptionArr);//初始化列头

            onIniData();//获取数据

            onListRole_click();

        }

        /* 初始化DataGrid */
        private function onIniDataGrid(cfieldArr:Array, cfieldcaptionArr:Array):void {

            dgList.columns = new Array();

            //初始化序号
            onIniSequenceColumn();

            //初始化负责人和相关人
            onIniDataAuthColumn();

            for (var i:int = 0; i < cfieldArr.length; i++) {
                var dgcolumn:DataGridColumn = new DataGridColumn();
                dgcolumn.dataField = cfieldArr[i];
                dgcolumn.headerText = cfieldcaptionArr[i];
                dgcolumn.width = 100;
                dgList.columns = dgList.columns.concat(dgcolumn);

            }

        }

        /* 初始化序号一列 */
        private function onIniSequenceColumn():void {

            var sqcolumn:DataGridColumn = new DataGridColumn();
            sqcolumn.labelFunction = lineNumColFunction;
            sqcolumn.dataField = "sort_id";
            sqcolumn.headerText = "序号";
            sqcolumn.width = 36;
            sqcolumn.editable = false;
            sqcolumn.sortable = false;
            sqcolumn.resizable = false;
            sqcolumn.setStyle("textAlign", "center");
            dgList.columns = dgList.columns.concat(sqcolumn);

        }

        /* 初始化负责人和相关人2列 */
        private function onIniDataAuthColumn():void {

            var cbcolumn1:DataGridColumn = new DataGridColumn();
            cbcolumn1.dataField = "fzperson";
            cbcolumn1.width = 65;
            cbcolumn1.sortable = true;
            cbcolumn1.resizable = false;
            cbcolumn1.headerText = "负责人";
            cbcolumn1.headerRenderer = headRenderer;
            cbcolumn1.itemRenderer = itemRenderer;


            var cbcolumn2:DataGridColumn = new DataGridColumn();
            cbcolumn2.dataField = "xgperson";
            cbcolumn2.width = 65;
            cbcolumn2.sortable = true;
            cbcolumn2.resizable = false;
            cbcolumn2.headerText = "相关人";
            cbcolumn2.headerRenderer = headRenderer2;
            cbcolumn2.itemRenderer = itemRenderer;

            dgList.columns = dgList.columns.concat(cbcolumn1);
            dgList.columns = dgList.columns.concat(cbcolumn2);

        }

        private function lineNumColFunction(item:Object, column:DataGridColumn):String {
            if (dgList.dataProvider) {
                for (var i:int = 1; i <= dgList.dataProvider.length; i++) {
                    if (dgList.dataProvider[i - 1] == item) {
                        item.sort_id = i;
                        return i + "";
                    }
                }

            }
            return "0";
        }

        //赋值于DataGrid
        private function onIniData():void {

            if (curIpe == 0 || CRMtool.isStringNull(curSql) || CRMtool.isStringNull(curTab)) {
                return;
            }

            var auth:OperDataAuth = new OperDataAuth();
            auth.addEventListener("onGet_FundataauthSucess", function (event:Event):void {
                if (curIifun == 63) {//销售线索列表用的v_sa_clue
                    curTab = "v_sa_clue";
                }

                var authSql:String = auth.getdataauthcondition("01", curIfu, curIpe, curIde, curTab, 1);

                if (curIfu == 282) {
                    var auth2:OperDataAuth = new OperDataAuth();
                    auth2.addEventListener("onGet_FundataauthSucess", function (evt:Event):void {
                        var orderAuthSql = auth2.getdataauthcondition("01", 44, curIpe, curIde, "cs_customer", 1);
                        authSql = " and sc_order.icustomer in (select iid from cs_customer where 1=1 " + orderAuthSql + ")";

                        mydo(authSql);
                    });
                    auth2.get_fundataauth({ifuncregedit: 44, iperson: curIpe});
                }else{
                    mydo(authSql);
                }

                function mydo(authSql:String){
                    var tSql:String = curSql;//保留原始Sql

                    var paramObj:Object = new Object();
                    paramObj.pagesize = 5000;
                    paramObj.curpage = 1;
                    paramObj.sqlid = "get_persons_sql";
                    paramObj.ifuncregedit = curIifun;

                    //tSql =  tSql.substring(6, tSql.length);

                    var findPersonSql:String = "DBO.FUN_FINDDATAAUTHINFO(0," + curIfu + "," + curIpe + "," + curTab + ".IID) fzperson," +
                            "DBO.FUN_FINDDATAAUTHINFO(1," + curIfu + "," + curIpe + "," + curTab + ".IID) xgperson"


                    if (trueRadioBtn.selected) {
                        tSql = "select *,"+findPersonSql+" from (" + tSql + ")" + curTab + " where 1=1 " + authSql;
                    } else {
                        tSql = "select *,"+findPersonSql+" from (" + tSql + ")" + curTab + " where iid not in ( select iid from (" + tSql + ")" + curTab + " where 1=1 " + authSql + " )";
                    }

                    paramObj.sql = tSql;

                    pageBar.initPageHandler(paramObj, function (list:ArrayCollection):void {
                        pageCallBack(list, tSql);
                    });
                }

            });

            var params2:Object = new Object();
            params2.ifuncregedit = curIfu;
            params2.iperson = curIpe;
            auth.get_fundataauth(params2);
        }


        public function pageCallBack(list:ArrayCollection, sql:String):void {

            for each(var item:Object in list) {
                var objInfo:Object = ObjectUtil.getClassInfo(item);
                var fieldName:Array = objInfo["properties"] as Array;
                for each (var q:QName in fieldName) {
                    if ((item[q.localName] is Date)) {
                        var date:Date = item[q.localName];
                        if (date.fullYear == 1900)
                            item[q.localName] = "";
                        else
                            item[q.localName] = CRMtool.formatDateNoHNS(item[q.localName]);
                    }
                }
            }

            //lzx
            this.dgArr = list;
            this.dgList.dataProvider = dgArr;
            this.fzperson = onGetCinvoices(0);
            this.xgperson = onGetCinvoices(1);
        }

        /* 获取角色对应的数据权限信息，在参照的后方显示 */
        public function onListRole_click():void {

            if (listRole.dataProvider == null || curIfu == 0) return;

            if (listRole.selectedItem == null) return;

            curIro = listRole.selectedItem.iid;

            var obj:Object = {};
            obj.irole = curIro;
            obj.ifun = curIfu;

            AccessUtil.remoteCallJava("AdvancedAuthDest", "onGetDataAuthByIrole", function (evt:ResultEvent):void {

                var str:String = evt.result.info + "";
                lblMessage.text = str;

            }, obj);

        }

        /* 保存按钮的操作 更新相关单据的数据权限*/
        public function btnSave_Click():void {

            var objvalue:Object = {};

            //后台参数赋值
            objvalue.ifuncregedit = curIfu;//功能注册码
            objvalue.fzperson = this.fzperson;//先删除原来的负责人
            objvalue.xgperson = this.xgperson;//先删除原来的相关人
            objvalue.fzcinvoice = onGetCinvoices(0);//负责人单据内码集合
            objvalue.xgcinvoice = onGetCinvoices(1);//相关人单据内码集合
            objvalue.iperson = curIpe;//赋权人员内码
            objvalue.idepartment = curIde;//部门内码

            AccessUtil.remoteCallJava("BatchAccreditDest", "onBranchExe", onBranchExeBack, objvalue);//调用后台的导出方法

        }

        /*数据导出 zlq */
        public function export_Data(event:MouseEvent):void {
            var consult1:Object = this.hbBus.getChildAt(1);
            /* if(text_str._1558402329_tnp_text_str == null){
             CRMtool.showAlert("请选择导出数据类型");
             return;
             }
             var title:String = text_str._1558402329_tnp_text_str; */

            var title:String = consult1.tnp_text_str;
            var objectValue:Object = {};

            objectValue.flag = 0;
            objectValue.title = title;

            var columnArry:ArrayCollection = new ArrayCollection();

            var count:int = 0;
            for each (var column:Object in this.dgList.columns) {
                if (count != 0) {
                    columnArry.addItem({"cfld": column.dataField, "cfldcaption": column.headerText, "width": column.width});
                }
                count = 1;

            }
            objectValue.fieldsList = columnArry;
            objectValue.arr = this.dgList.dataProvider;
            if (this.dgList.dataProvider == null) {
                CRMtool.showAlert("没有数据可以导出");
                return;
            }

            AccessUtil.remoteCallJava("ExcelHadleDest", "writeExcel", onWriteExcelBack, objectValue);//调用后台的导出方法
        }

        private function onWriteExcelBack(evt:ResultEvent):void {
            var filename:String = "";
            if (evt.result.hasOwnProperty("filename")) {
                filename = evt.result.filename as String;
            }
            var requestUrl:String = "/" + ConstsModel.publishAppName + "/excelExportServlet?fn=" + filename;
            var request:URLRequest = new URLRequest(requestUrl);
            navigateToURL(request, "_blank");
        }

        /* 公共方法获取需要赋权的单据内码集合 */
        private function onGetCinvoices(flag:int):String {
            var iids:String = "";
            var iid:int;
            var arrcol:ArrayCollection = this.dgList.dataProvider as ArrayCollection;
            for (var i:int = 0; i < arrcol.length; i++) {
                var item:Object = arrcol.getItemAt(i);

                if ((flag == 0 && item.fzperson == 1) || (flag == 1 && item.xgperson == 1)) {

                    iid = item.iid;
                    iids += iid + ",";

                }
            }

            iids = iids.substring(0, iids.lastIndexOf(","));

            return iids;

        }

        private function onBranchExeBack(evt:ResultEvent):void {

            var rstr:String = evt.result as String;
            if (rstr == "suc")
                CRMtool.tipAlert("高级授权成功！");
            else
                CRMtool.tipAlert("高级授权失败！");

        }

        private function dgList_headerReleaseHandler(event:DataGridEvent):void {
            /*if(event.columnIndex==1)
             event.preventDefault();*/
        }
        ]]>
	</fx:Script>
    <fx:Declarations>
        <fx:Component id="itemRenderer">
            <s:MXDataGridItemRenderer focusEnabled="true">
                <fx:Script><![CDATA[
                    import mx.collections.ArrayCollection;
                    import mx.controls.DataGrid;

                    override public function set data(value:Object):void {
                        super.data = value;

                        data[dataGridListData.dataField] = (cb.selected == false) ? 0 : 1;

                    }

                    public function onClick():void {
                        data[dataGridListData.dataField] = (cb.selected == false) ? 0 : 1;
                        if (dataGridListData.dataField == "fzperson" && cb.selected) {
                            data.xgperson = 0;
                        }
                        else if (dataGridListData.dataField == "xgperson" && cb.selected) {
                            data.fzperson = 0;
                        }
                        var ac:ArrayCollection = (this.owner as DataGrid).dataProvider as ArrayCollection;
                        ac.refresh();
                    }
                    ]]></fx:Script>

                <mx:HBox width="100%" horizontalAlign="center">

                    <mx:CheckBox id="cb" selected="{(data[dataGridListData.dataField]==false)?0:1}"
                                 click="onClick()"/>

                </mx:HBox>

            </s:MXDataGridItemRenderer>
        </fx:Component>

        <fx:Component id="headRenderer">
            <mx:HBox backgroundAlpha="0" horizontalScrollPolicy="off" width="100%" paddingLeft="5" horizontalGap="4">

                <fx:Script><![CDATA[
                    import mx.collections.ArrayCollection;
                    import mx.controls.DataGrid;
                    import mx.events.FlexEvent;

                    private function hcb_changeHandler(event:Event):void {
                        var ac:ArrayCollection = (this.owner as DataGrid).dataProvider as ArrayCollection;

                        for each(var item:Object in ac) {
                            item.fzperson = (hcb.selected == false) ? 0 : 1;
                            if (hcb.selected) {
                                item.xgperson = 0;
                            }
                        }
                        ac.refresh();
                    }
                    ]]></fx:Script>

                <mx:CheckBox id="hcb" change="hcb_changeHandler(event)"/>
                <mx:Label text="负责人" height="100%" textAlign="center"/>
            </mx:HBox>
        </fx:Component>

        <fx:Component id="headRenderer2">
            <mx:HBox backgroundAlpha="0" horizontalScrollPolicy="off" width="100%" paddingLeft="5" horizontalGap="4">

                <fx:Script><![CDATA[
                    import mx.collections.ArrayCollection;
                    import mx.controls.DataGrid;
                    import mx.events.FlexEvent;

                    private function hcb_changeHandler(event:Event):void {
                        var ac:ArrayCollection = (this.owner as DataGrid).dataProvider as ArrayCollection;
                        for each(var item:Object in ac) {
                            item.xgperson = (hcb2.selected == false) ? 0 : 1;
                            if (hcb2.selected) {
                                item.fzperson = 0;
                            }
                        }
                        ac.refresh();
                    }
                    ]]></fx:Script>

                <mx:CheckBox id="hcb2" change="hcb_changeHandler(event)"/>
                <mx:Label text="相关人" height="100%"/>
            </mx:HBox>
        </fx:Component>

    </fx:Declarations>
    <mx:RadioButtonGroup id="group1"/>
    <mx:VBox width="20%" height="100%" verticalGap="10">

        <!-- 左列一 -->
        <mx:VBox width="100%" height="50%" styleName="lefttree">

            <mx:ApplicationControlBar width="100%" height="32" dock="true">
                <s:Label id="lblUser" styleName="contentTitle" text="职员用户"/>
            </mx:ApplicationControlBar>

            <mx:HBox width="100%" height="100%" styleName="lefttree1">
                <comps:TreeCompsVbox id="treeUser" width="100%" height="100%" itemClick="treeUser_click()"/>
            </mx:HBox>

        </mx:VBox>

        <!-- 左列二 -->
        <mx:VBox width="100%" height="50%" styleName="lefttree">
            <mx:ApplicationControlBar width="100%" height="32" dock="true">
                <s:Label text="隶属角色" styleName="contentTitle"/>
            </mx:ApplicationControlBar>
            <mx:HBox width="100%" height="100%" styleName="lefttree1" id="childMenu">
                <mx:List borderVisible="false" id="listRole" labelField="cname" width="100%" height="100%"
                         itemClick="onListRole_click()"/>

            </mx:HBox>
        </mx:VBox>

    </mx:VBox>

    <!--右侧列表-->
    <mx:VBox width="80%" height="100%">

        <mx:ApplicationControlBar width="100%" height="32" dock="true" styleName="centertop">
            <mx:HBox id="hbBus" enabled="{treeUser.selectedItem!=null}">
                <mx:Label id="lblBusName" text="业务功能："/>
            </mx:HBox>

            <mx:Label id="lblMessage" width="300" color="blue" fontWeight="normal"/>

            <s:Spacer width="100%"/>

            <s:HGroup horizontalAlign="right">
                <s:RadioButton id="trueRadioBtn" label="已授权" groupName="group1" selected="true" click="onIniData()"/>
                <s:RadioButton id="falseRadioBtn" label="未授权" groupName="group1" click="onIniData()"/>
            </s:HGroup>
            <s:Button id="btnSave" label="保存" click="btnSave_Click()"/>
            <s:Button id="exportData" label="数据导出" click="export_Data(event)"/>

        </mx:ApplicationControlBar>

        <mx:HBox id="hbDataGrid" width="100%" height="100%" paddingTop="-1">

            <mx:DataGrid id="dgList" width="100%" height="100%" horizontalScrollPolicy="auto" selectable="false"
                         headerRelease="dgList_headerReleaseHandler(event)"/>

        </mx:HBox>
        <mx:HBox id="pageBarBox" height="32" verticalAlign="middle" horizontalAlign="right" width="100%">

            <comps:PageBar paddingRight="10" id="pageBar" showLoad="true" height="100%"/>

        </mx:HBox>

    </mx:VBox>
</mx:HBox>
