<?xml version="1.0" encoding="utf-8"?>
<mx:HDividedBox xmlns:fx="http://ns.adobe.com/mxml/2009"
                xmlns:s="library://ns.adobe.com/flex/spark"
                xmlns:mx="library://ns.adobe.com/flex/mx" width="100%"
                height="100%"
                xmlns:comps="yssoft.comps.*"
                creationComplete="init()"
                implements="yssoft.impls.ICRMWindow">
    <fx:Script>
		<![CDATA[
        import mx.collections.ArrayCollection;
        import mx.events.ItemClickEvent;
        import mx.rpc.events.ResultEvent;
        import mx.utils.StringUtil;

        import yssoft.models.ConstsModel;
        import yssoft.tools.AccessUtil;
        import yssoft.tools.CRMtool;
        import yssoft.vos.ScProductClassVo;

        [Bindable]
        public var titleLabel:String = "";
        [Bindable]
        public var treObject:XML;
        [Bindable]
        public var operateState:String = "";
        [Bindable]
        public var classVo:ScProductClassVo = new ScProductClassVo();
        [Bindable]
        public var ccodes:ArrayCollection = new ArrayCollection();

        //窗体初始化
        public function onWindowInit():void {

        }

        //窗体打开
        public function onWindowOpen():void {
            clearFrom();
            tree_pub.enabled = true;
            init();
        }

        //窗体关闭,完成窗体的清理工作
        public function onWindowClose():void {

        }

        private function init():void {
            //回车替代TAB键
            CRMtool.setTabIndex(tabVbox);
            CRMtool.toolButtonsEnabled(this.lbr_role, null);
            CRMtool.containerChildsEnabled(this.Vbox_Enabld, false);
            AccessUtil.remoteCallJava("CalculateMaterielDest", "getSc_productGroupList", callFun);
        }

        private function callFun(e:ResultEvent):void {
            if (e.result != null) {
                var treexml:XML = new XML(e.result as String);
                this.tree_pub.treeCompsXml = treexml;
            }
            /* if(e.result  != null&&e.result!="<root />")
             this.tree_pub.treeCompsXml = new XML(e.result as String); */
            var sql:String = "select ccode from sc_productgroup ";
            AccessUtil.remoteCallJava("CommonalityDest", "assemblyQuerySql", function (e:ResultEvent):void {
                var resArr:ArrayCollection = e.result as ArrayCollection;
                if (resArr.length > 0) {
                    ccodes = resArr;
                }
            }, sql, null, false);
        }


        private function tree_click():void {
            if (this.tree_pub.selectedItem == null) {
                return;
            }
            treObject = this.tree_pub.selectedItem as XML;
            if (treObject.hasComplexContent()) {
                return;
            }
        }

        private function onOperate(event:ItemClickEvent):void {
            var type:String = event.item.name;

            if (type == "onNew") {
                clearFrom();
                tree_pub.enabled = false;
                CRMtool.containerChildsEnabled(this.Vbox_Enabld, true);
                CRMtool.toolButtonsEnabled(this.lbr_role, type);
                operateState = "onNew";

            } else if (type == "onEdit") {
                if (!this.tree_pub.selectedItem) {
                    CRMtool.tipAlert("请选择要修改的记录");
                    return;
                }
                CRMtool.containerChildsEnabled(this.Vbox_Enabld, true);
                tree_pub.enabled = false;
                CRMtool.toolButtonsEnabled(this.lbr_role, type);
                operateState = "onEdit";

            } else if (type == "onDelete") {
                if (!this.tree_pub.selectedItem) {
                    CRMtool.tipAlert("请选择要删除的记录");
                    return;
                }

                if (this.tree_pub.isExistsChild(this.tree_pub.selectedItem.@ccode, ConstsModel.ROLE_ROMEVE_PID)) {
                    return;
                }
                operateState = "onDelete";
                CRMtool.toolButtonsEnabled(this.lbr_role, type);
                CRMtool.tipAlert(ConstsModel.DETERMINE_HEAD + treObject.@cname + "]物料分组?", null, "AFFIRM", this, "onDeleteScProductGroup");
            } else if (type == "onSave") {
                //首先判断编码是否为空
                if (CRMtool.isStringNull(this.tnp_groupCode.text)) {
                    CRMtool.tipAlert("分组编码不能为空", this.tnp_groupCode);
                    return;
                }
                else if (CRMtool.isStringNull(this.tnp_groupName.text)) {
                    CRMtool.tipAlert("分组名称不能为空", this.tnp_groupName);
                    return;
                }
                else if (operateState == "onNew" || (operateState == "onEdit" && tree_pub.selectedItem.@ccode != StringUtil.trim(this.tnp_groupCode.text))) {
                    for each(var item:Object in ccodes) {
                        if (item.ccode == this.tnp_groupCode.text) {
                            CRMtool.tipAlert("分组编码重复");
                            return;
                        }
                    }
                }
                //判断编码是否存在
                if (type == "onNew" || (type == ConstsModel.ONEDIT_LABLE && this.tree_pub.selectedItem.@ccode != this.tnp_groupCode.text)) {
                    if (this.tree_pub.isExistsCcode(this.tnp_groupCode.text, ConstsModel.ROLE_CCODE_WARNMSG)) {
                        return;
                    }
                }
                if (!this.tree_pub.isExistsParent(this.tnp_groupCode.text, ConstsModel.ROLE_PID_WARNMSG))return;//判断输入编号是否有父节点

                CRMtool.toolButtonsEnabled(this.lbr_role, type);
                if (operateState == "onNew") {
                    AccessUtil.remoteCallJava("CalculateMaterielDest", "addScProductGroup", call_fun_result, this.getParams());
                } else {
                    AccessUtil.remoteCallJava("CalculateMaterielDest", "updateScProductGroup", call_fun_result, this.getParams());
                }
            } else if (type == "onGiveUp") {
                CRMtool.containerChildsEnabled(this.Vbox_Enabld, false);
                CRMtool.toolButtonsEnabled(this.lbr_role, type); //按钮互斥
                tree_pub.enabled = true;
                clearFrom();
            }

        }


        private function call_fun_result(e:ResultEvent):void {
            var str:String = e.result as String;
            this.loadClassVo();

            if (operateState == "onNew") {
                str = e.result.flag;
            }

            if (str == "success") {
                CRMtool.tipAlert("操作成功！");
                CRMtool.containerChildsEnabled(this.Vbox_Enabld, false);
                tree_pub.enabled = true;
                //this.refTree();
                if (operateState == "onNew") {
                    classVo.iid = int(e.result.iid);
                    this.tree_pub.AddTreeNode(classVo);
                    tree_pub.selectedIndex = -1;
                }
                else if (operateState == "onEdit") {
                    this.tree_pub.EditTreeNode(classVo);
                }
                else if (operateState == "onDelete") {
                    this.tree_pub.DeleteTreeNode();
                    clearFrom();
                    tree_pub.selectedIndex = -1;
                }

            }
            else CRMtool.tipAlert("操作失败！");
        }

        public function onDeleteScProductGroup():void {
            var params:Object = this.getParams();
            if (treObject.hasComplexContent()) {
                params.delSonNode = "true";
            }
            AccessUtil.remoteCallJava("CalculateMaterielDest", "delScProductGroup", call_fun_result, params);
        }


        //获取所有参数
        private function getParams():Object {
            var params:Object = {};
            params.iid = treObject == null ? "" : int(treObject.@iid);
            params.ccode = this.tnp_groupCode.text;
            params.cmemo = this.tnp_groupMemo.text;
            params.cname = this.tnp_groupName.text;
            params.ipid = this.tree_pub.getIpid(this.tnp_groupCode.text);
            params.oldCode = treObject == null ? "" : treObject.@ccode + "";
            return params;
        }

        private function loadClassVo():void {
            var params:Object = this.getParams();
            //加载  vo 对象
            classVo.iid = params.iid;
            classVo.ccode = params.ccode;
            classVo.cname = params.cname;
            classVo.ipid = params.ipid;
            classVo.cmemo = params.cmemo;
        }

        //清空
        private function clearFrom():void {
            this.tnp_groupCode.text = "";
            this.tnp_groupName.text = "";
            this.tnp_groupMemo.text = "";
        }
        ]]>
	</fx:Script>

    <!-- 角色树 -->
    <mx:VBox width="20%" height="100%" styleName="lefttree">
        <mx:ApplicationControlBar width="100%" height="32" dock="true">
            <mx:Label text="物料分组" styleName="contentTitle"/>
        </mx:ApplicationControlBar>
        <mx:HBox width="100%" height="100%" styleName="lefttree1">
            <comps:TreeCompsVbox id="tree_pub" width="100%" height="100%" click="tree_click()"/>
        </mx:HBox>
    </mx:VBox>

    <!-- 右边 -->
    <mx:VBox width="80%" height="100%" styleName="centerbg4">
        <mx:ApplicationControlBar styleName="centertop" width="100%" height="32">
            <comps:LinkBarVboxComps id="lbr_role" height="25" width="15%" buttonWidth="48"
                                    dataProvider="{ConstsModel.LBRITEM}" itemClick="onOperate(event)"
                                    styleName="contentButtonBar"/>
            <s:Spacer width="95%"/>
        </mx:ApplicationControlBar>
        <mx:VBox width="100%" height="100%" paddingLeft="10" paddingRight="10" paddingTop="10" paddingBottom="1">
            <mx:VBox width="100%" height="100%" cornerRadius="8" backgroundColor="#f7f7f7" id="Vbox_Enabld">
                <mx:VBox width="100%" height="100%" horizontalAlign="center">
                    <mx:Canvas id="vsCav_Unit" width="100%">
                        <mx:HBox width="100%" horizontalAlign="center">
                            <mx:VBox id="tabVbox" width="100%" styleName="content">

                                <mx:HBox width="100%" height="28" verticalAlign="middle">
                                    <mx:Label text="  分组编码"/>
                                    <mx:TextInput id="tnp_groupCode" restrict="^'" width="100%"
                                                  text="{treObject.@ccode}" styleName="contentTextInput"/>
                                </mx:HBox>
                                <mx:HRule width="100%"/>
                                <mx:HBox width="100%" height="28" verticalAlign="middle">
                                    <mx:Label text="  分组名称"/>
                                    <mx:TextInput id="tnp_groupName" restrict="^'" width="100%"
                                                  text="{treObject.@cname}" styleName="contentTextInput"/>
                                </mx:HBox>
                                <mx:HRule width="100%"/>
                                <mx:HBox width="100%" height="28" verticalAlign="middle">
                                    <mx:Label text="  备注说明"/>
                                    <mx:TextInput id="tnp_groupMemo" restrict="^'" width="100%"
                                                  text="{treObject.@cmemo}" styleName="contentTextInput"/>
                                </mx:HBox>

                            </mx:VBox>
                        </mx:HBox>
                    </mx:Canvas>
                </mx:VBox>
            </mx:VBox>
        </mx:VBox>
    </mx:VBox>
</mx:HDividedBox>
