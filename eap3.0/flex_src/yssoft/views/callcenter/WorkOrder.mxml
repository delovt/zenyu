<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:fx="http://ns.adobe.com/mxml/2009"
           xmlns:s="library://ns.adobe.com/flex/spark"
           xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%" xmlns:comps="yssoft.comps.*">
    <fx:Style>
        @namespace s "library://ns.adobe.com/flex/spark";
        @namespace mx "library://ns.adobe.com/flex/mx";
        @namespace comps "yssoft.comps.*";

        .myButton {
            backgroundAlpha: 0.5;
            borderStyle: inset;
        }
    </fx:Style>
    <fx:Script>
		<![CDATA[
        import mx.collections.ArrayCollection;
        import mx.controls.Alert;
        import mx.rpc.events.ResultEvent;

        import yssoft.tools.AccessUtil;
        import yssoft.tools.CRMtool;

        [Embed(source="/yssoft/assets/images/arrive.png")]
        public var arrive:Class;
        [Embed(source="/yssoft/assets/images/leave.png")]
        public var leave:Class;
        [Embed(source="/yssoft/assets/images/changecode.png")]
        public var changecode:Class;
        [Embed(source="/yssoft/assets/images/changeperson.png")]
        public var changeperson:Class;

        [Bindable]
        private var _winParam:Object;
        [Bindable]
        public var parentCard:HotLineCard;

        public function set winParam(value:Object):void {
            this._winParam = value;
            if (this._winParam) {
                callRequest(this._winParam);
            }
        }

        public function get winParam():Object {
            return this._winParam;
        }

        private function callRequest(param:Object):void {
            //Alert.show(""+ObjectUtil.toString(param));
            AccessUtil.remoteCallJava("CallCenterDest", "nowWorkOrder", callBack, param, null, false);
        }

        [Bindable]
        private var item:ArrayCollection = new ArrayCollection();

        private function callBack(event:ResultEvent):void {
            //Alert.show("[result]"+(event.result));
            item = event.result as ArrayCollection;
            if (item.length == 0) {
                this.label = "进行工单";
            }
            else {
                this.label = "进行工单(" + item.length + ")";
            }
        }

        //
        private function lbfun(item:Object, column:DataGridColumn):String {
            if (item) {
                return "" + (this.item.getItemIndex(item) + 1)
            } else {
                return "";
            }
        }

        //更新到达时间
        private var param:Object = new Object();
        private var optType:String = "";

        public function updateDate(type:String = "updateArrivalDate"):void {
            if (dgitems.selectedItem == null) {
                Alert.show("请选择后再处理！！", "提示");
                return;
            }

            if (parentCard.solution_7.selected == false) {
                CRMtool.showAlert("处理方式应为报岗，才能执行此操作。")
            } else {
                var sql:String = "select isnull(breport,0) breport from cc_callcenter where iid =" + parentCard.item.iid;
                AccessUtil.remoteCallJava("CommonalityDest", "assemblyQuerySql", function (event:ResultEvent):void {
                    var breport:Boolean = (event.result as ArrayCollection)[0].breport;
                    if (breport) {
                        CRMtool.showAlert("该电话记录已经参与过报岗，不允许再次参与。");
                    } else {
                        optType = type;
                        param.ddate = winParam.carditem.dbegin;
                        param.callphone = winParam.carditem.ccallintel;
                        param.iid = dgitems.selectedItem.iid;
                        AccessUtil.remoteCallJava("CallCenterDest", "getistatus", getistatusCallBack, param, null, false);
                    }
                }, sql);
            }
        }

        private function getistatusCallBack(evt:ResultEvent):void {
            var arr:ArrayCollection = evt.result as ArrayCollection;
            if (arr != null && arr.length > 0) {
                if (arr[0].istatus == 3) {
                    Alert.show("已交单禁止更新时间！！", "提示");
                    return;
                }
                if (arr[0].istatus == 4) {
                    Alert.show("已关闭禁止更新时间！！", "提示");
                    return;
                }

                AccessUtil.remoteCallJava("CallCenterDest", optType, updateCallBack, param, "正在更新时间...");
            }
        }

        private function updateCallBack(event:ResultEvent):void {
            var ret:String = event.result as String;
            if (ret == "suc") {
                if (optType == "updateDepartureDate") { // 离开时间
                    this.dgitems.selectedItem.ddeparture = this.winParam.carditem.dbegin;
                } else {
                    this.dgitems.selectedItem.darrival = this.winParam.carditem.dbegin;
                }
                //刷性集合，以便显示 修改后的数据
                item.refresh();
                var sql:String = "update cc_callcenter set  breport=1 where iid =" + parentCard.item.iid;
                AccessUtil.remoteCallJava("CommonalityDest", "assemblyQuerySql", function (event:ResultEvent):void {
                    if (parentCard.item.isolution != 7)
                        parentCard.savemoment("报岗");
                }, sql);
            }
            //Alert.show("更新"+(ret=="suc"?"成功":"失败")+"!","提示");
        }


        public function updateEngineer():void {
            if (dgitems.selectedItem == null || dgitems.selectedItem.iid == null) {
                return;
            }
            if (dgitems.selectedItem.cstatus != "制单") {
                CRMtool.showAlert("此工单已有服务记录，不允许变更工程师。");
                return;
            }
            if (dgitems.selectedItem.iengineer == null) {
                CRMtool.showAlert("请先选择工程师。");
                return;
            }
            //curdate=DateUtil.formateDate();
            //param.ddate=curdate;
            param.iid = dgitems.selectedItem.iid;
            param.iengineer = dgitems.selectedItem.iengineer;

            //optType="updateEngineer";

            AccessUtil.remoteCallJava("CallCenterDest", "updateEngineer", changeCallBack, param, "正在变更工程师...");
        }

        private function changeCallBack(event:ResultEvent):void {
            var ret:String = event.result as String;
            Alert.show("更新" + (ret == "suc" ? "成功" : "失败") + "!", "提示");

        }

        public function updateCcode():void {
            if (dgitems.selectedItem == null) {
                Alert.show("请选择后再处理！！", "提示");
                return;
            }
            param.iid = dgitems.selectedItem.iid;
            param.ccode = dgitems.selectedItem.ccode;

            optType = "updateCcode";

            AccessUtil.remoteCallJava("CallCenterDest", "getccode", onGetCcodeCallBack, param, null, false);
        }

        private function onGetCcodeCallBack(evt:ResultEvent):void {
            var arr:ArrayCollection = evt.result as ArrayCollection;
            if (arr.length > 0) {
                Alert.show("变更失败！！原因：变更单号已存在。", "提示");
                return;
            }
            AccessUtil.remoteCallJava("CallCenterDest", "updateCcode", changeCallBack1, param, "正在变更服务单号...");
        }

        private function changeCallBack1(event:ResultEvent):void {
            var ret:String = event.result as String;
            if (ret == "suc") {
                Alert.show("变更服务单号成功", "提示");
            } else if (ret == "error") {
                Alert.show("服务单号不唯一，请重新输入", "提示");
            } else {
                Alert.show("变更服务单号失败", "提示");
            }

        }

        protected function dgitems_doubleClickHandler(event:MouseEvent):void {
            CRMtool.openbillonbrowse(150, dgitems.selectedItem.iid, "服务工单处理");
        }
        ]]>
	</fx:Script>
    <fx:Declarations>
        <!-- 将非可视元素（例如服务、值对象）放在此处 -->
    </fx:Declarations>
    <!--iid,ccode,iengineer,darrival,ddeparture,istatus,iresult -->
    <mx:DataGrid id="dgitems" width="100%" height="100%" sortableColumns="false" editable="true"
                 variableRowHeight="true" dataProvider="{item}" doubleClickEnabled="true"
                 doubleClick="dgitems_doubleClickHandler(event)">
        <mx:columns>
            <mx:DataGridColumn width="40" headerText="序号" labelFunction="lbfun" editable="false"/>
            <mx:DataGridColumn width="100" headerText="服务单号" dataField="ccode" editable="true"/>
            <mx:DataGridColumn width="80" headerText="工程师" editorDataField="data_iengineer" dataField="pname">
                <mx:itemEditor>
                    <fx:Component>
                        <s:MXDataGridItemRenderer focusEnabled="true">
                            <fx:Script>
								<![CDATA[
                                private var _data_iengineer:String;
                                public function get data_iengineer():String {
                                    return csl_textinput.tnp_text_str;
                                }

                                public function set data_iengineer(val:String):void {
                                    this._data_iengineer = val;
                                }

                                private var _data_iengineer_str:String;
                                public function set data_iengineer_str(value:String):void {
                                    this._data_iengineer_str = value;
                                }

                                public function get data_iengineer_str():String {
                                    return this._data_iengineer_str;
                                }

                                protected function csl_textinput_searchChangeHandler(event:Event):void {
                                    data.iengineer = csl_textinput.value;
                                    data.pname = csl_textinput.tnp_text_str;
                                    outerDocument.dgitems.setFocus();//参照返回后可以正常翻译
                                }

                                protected function csl_textinput_valueChangeHandler(event:Event):void {
                                    data.iengineer = 0;
                                    data.pname = "";
                                    _data_iengineer = "";
                                    outerDocument.dgitems.dataProvider.getItemAt(outerDocument.dgitems.selectedIndex).iengineer = 0;
                                    outerDocument.dgitems.dataProvider.getItemAt(outerDocument.dgitems.selectedIndex).pname = "";
                                }
                                ]]>
							</fx:Script>
                            <comps:ConsultTextInput valueChange="csl_textinput_valueChangeHandler(event)"
                                                    editable="true" iid="11" bindValueField="iid" bindLabelField="cname"
                                                    tnp_text_str="{data.pname}"
                                                    id="csl_textinput" visibleIcon="true"
                                                    searchChange="csl_textinput_searchChangeHandler(event)" top="0"
                                                    left="0" right="0" bottom="0">
                            </comps:ConsultTextInput>
                        </s:MXDataGridItemRenderer>
                    </fx:Component>
                </mx:itemEditor>
            </mx:DataGridColumn>
            <mx:DataGridColumn width="160" headerText="到达时间" dataField="darrival" editable="false"/>
            <mx:DataGridColumn width="160" headerText="离开时间" dataField="ddeparture" editable="false"/>
            <mx:DataGridColumn width="75" headerText="状态" dataField="cstatus" editable="false"/>
            <mx:DataGridColumn width="75" headerText="处理方式" dataField="cresult" editable="false"/>
            <mx:DataGridColumn headerText="相关操作" editable="false">
                <mx:itemRenderer>
                    <fx:Component>
                        <mx:HBox width="100%" horizontalAlign="left" paddingLeft="22" horizontalScrollPolicy="off">
                            <mx:Image id="arrive" width="30" buttonMode="true" source="{outerDocument.arrive}"
                                      toolTip="到达" click="outerDocument.updateDate('updateArrivalDate')"/>
                            <mx:Image id="leave" width="30" buttonMode="true" source="{outerDocument.leave}"
                                      toolTip="离开" click="outerDocument.updateDate('updateDepartureDate')"/>
                            <mx:Image id="changecode" width="30" buttonMode="true" source="{outerDocument.changecode}"
                                      toolTip="变更单号" click="outerDocument.updateCcode()"/>
                            <mx:Image id="changeperson" width="30" buttonMode="true"
                                      source="{outerDocument.changeperson}" toolTip="变更工程师"
                                      click="outerDocument.updateEngineer()"/>
                        </mx:HBox>
                    </fx:Component>
                </mx:itemRenderer>
            </mx:DataGridColumn>
        </mx:columns>
    </mx:DataGrid>
</mx:Canvas>
