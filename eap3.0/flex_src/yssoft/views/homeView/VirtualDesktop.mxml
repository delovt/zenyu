<?xml version="1.0" encoding="utf-8"?>
<mx:Tile xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"  width="100%" height="100%" tileHeight="{this.height/3-4}" tileWidth="{this.width/3-6}"
		 verticalAlign="middle" horizontalAlign="center" xmlns:homeView="yssoft.views.homeView.*">
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.controls.List;
			import mx.core.Container;
			import mx.rpc.events.ResultEvent;
			
			import spark.components.Button;
			
			import yssoft.tools.AccessUtil;
			
			private var _idesktop:int;
			private var _ownerBox:EditSmartDesktopTitleWindow;
			
			
			public function get ownerBox():EditSmartDesktopTitleWindow
			{
				return _ownerBox;
			}
			
			public function set ownerBox(value:EditSmartDesktopTitleWindow):void
			{
				_ownerBox = value;
			}
			
			public function get idesktop():int
			{
				return _idesktop;
			}
			
			public function set idesktop(value:int):void
			{
				_idesktop = value;
				if(value>0){
					AccessUtil.remoteCallJava("ExplorerDest","getDetailDesktopList",getDetailDesktopListBack,{idesktop:value});	
				}
			}
			
			private function getDetailDesktopListBack(event:ResultEvent):void{
				var desktopsList:ArrayCollection = event.result as ArrayCollection;
				for each(var item:Object in desktopsList){
					var ino:String = item.ino+"";
					var sortid:String = ino.substr(4);
					(this["box"+sortid] as SmartButton).text = item.ccaption;
					(this["box"+sortid] as SmartButton).funtypeid = item.itype;					
					(this["box"+sortid] as SmartButton).ifuncregedit = item.ifuncregedit;
					(this["box"+sortid] as SmartButton).ifuncregedits = item.ifuncregedits;
					(this["box"+sortid] as SmartButton).ipage = item.ipage;
					
					if(item.itype==0){
						(this["box"+sortid] as SmartButton).ifuncregedit = -1;
						for each(var button:Button in ownerBox.sixBox.getChildren()){
							if(button.label == item.ccaption)
								(this["box"+sortid] as SmartButton).binadbleButton = button;
						}
					}
					if(item.itype>0){
						var list:List;
						if(item.itype==1)
							list = ownerBox.listViewList;
						else if(item.itype==2)
							list = ownerBox.chartViewList;
						else if(item.itype==3)
							list = ownerBox.otherViewList;
						
						var ac:ArrayCollection = list.dataProvider as ArrayCollection;
						var swapItem:Object;
						for each (var obj:Object in ac){
							if(obj.ifuncregedit==item.ifuncregedit){
								swapItem = obj;							
							}
						}
						if(swapItem&&(item.itype==2||item.itype==3)){
							(this["box"+sortid] as SmartButton).binableItem = swapItem;
							(this["box"+sortid] as SmartButton).binadbleObj = list;
							ac.removeItemAt(ac.getItemIndex(swapItem));
						}
					}
					
				}
			}
			
			protected function smartButtonClosedHandler(event:Event):void
			{
				var sb:SmartButton = event.currentTarget as SmartButton;
				sb.text = sb.id.substr(3);		
				sb.removeButtonBox.visible = false;
				sb.binadbleButton=null;				
				sb.ifuncregedit=0;
			}
			
			public function clearData():void{
				for each(var item:SmartButton in this.getChildren()){
					item.dispatchEvent(new Event("smartButtonClosed"));
				} 
			}
			
			public function getData():ArrayCollection{
				var i:int = 1;
				var j:int = 1;
				var ino:int = 1;
				var ac:ArrayCollection = new ArrayCollection();
				for each(var sb:SmartButton in this.getChildren()){
					if(i==4){
						i=1;
						j++;
					}					
					if(sb.text.length>1){
						var obj:Object = new Object();
						obj.text = sb.text;
						obj.col = i+"";
						obj.row = j+"";
						obj.x = 1+"";
						obj.y = 1+"";
						obj.ino = ino+"";
						obj.ipage = sb.ipage;
						obj.ifuncregedit = sb.ifuncregedit;
						
						if(sb.getListDropDownListSelect()){
							obj.ifuncregedits  = sb.getListDropDownListSelect().iid;
							//obj.text = sb.text+"_"+sb.getListDropDownListSelect().cname;
						}
						
						obj.itype = sb.funtypeid;												
						ac.addItem(obj);
					}					
					i++;
					ino++;
				}				
				return ac;
			}
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<homeView:SmartButton id="box1"  typeid="2" text="1" smartButtonClosed="smartButtonClosedHandler(event)"/>
	<homeView:SmartButton  id="box2" typeid="2" text="2" smartButtonClosed="smartButtonClosedHandler(event)"/>
	<homeView:SmartButton  id="box3" typeid="2" text="3" smartButtonClosed="smartButtonClosedHandler(event)"/>
	<homeView:SmartButton  id="box4" typeid="2" text="4" smartButtonClosed="smartButtonClosedHandler(event)"/>
	<homeView:SmartButton  id="box5" typeid="2" text="5" smartButtonClosed="smartButtonClosedHandler(event)"/>
	<homeView:SmartButton  id="box6" typeid="2" text="6" smartButtonClosed="smartButtonClosedHandler(event)"/>
	<homeView:SmartButton  id="box7" typeid="2" text="7" smartButtonClosed="smartButtonClosedHandler(event)"/>
	<homeView:SmartButton  id="box8" typeid="2" text="8" smartButtonClosed="smartButtonClosedHandler(event)"/>
	<homeView:SmartButton  id="box9" typeid="2" text="9" smartButtonClosed="smartButtonClosedHandler(event)"/>
</mx:Tile>
