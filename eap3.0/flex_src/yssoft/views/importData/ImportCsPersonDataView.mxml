<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" styleName="centerbg4"
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="100%"
		 verticalGap="0" creationComplete="initBasicData()"
		 height="100%">
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.core.INavigatorContent;
            import mx.events.FlexEvent;
            import mx.rpc.events.ResultEvent;
			import mx.utils.ObjectUtil;
			
			import yssoft.models.CRMmodel;
			import yssoft.models.ConstsModel;
			import yssoft.tools.AccessUtil;
			import yssoft.tools.CRMtool;

            private var _counter:int = 1;
            private var maxConter:int = 2;

            private var cslist:ArrayCollection;//客户列表
            private var datalist:ArrayCollection;//枚举列表
            //private var personlist:ArrayCollection;//人员列表
            //private var department:ArrayCollection;//部门列表

			[Bindable]
			public var aclist:ArrayCollection;
			
			[Bindable]
			public var checkFlag:Boolean = true;
			
			public var errString:String="@*#@";
			public var catchString:String="@#*@";	
			
			private var footText:String = "导入数据说明：<br/>" +
				"	1、所属客户、姓名为必填项；<br/>" +
				"	2、编码不允许重复，系统自动查重，查重范围包括本表及系统数据库；<br/>" +
				"	3、所属客户可以输入其编码或名称，系统会自行校验内码，但编码不能含汉字；<br/>" +
				"	4、系统导入时会根据字段长度进行截位处理；<br/>"+
                "   <FONT COLOR='#ff8100'>	5、一次导入数据上限为2000条,数据验证将会花费一定时间，视数据量与计算机性能将会等待1至60秒。</FONT>";
			
			private var downloadText =
				"<FONT COLOR='#ff0000'><A HREF='"
				+ConstsModel.publishUrlRoot+"/importDataTemplate/"+"cs_custperson.xls"
				+"' TARGET='_blank'>点此下载数据导入模板</A></FONT>";

            private function initBasicData():void {
                var sql1:String = "select iid,cname,ccode from cs_customer";
                AccessUtil.remoteCallJava("CommonalityDest", "assemblyQuerySql", function (event:ResultEvent):void {
                    cslist = event.result as ArrayCollection;
                    counter++;
                }, sql1);

                var sql2:String = "select iid,cname,ccode,iclass from aa_data where iclass =37";
                AccessUtil.remoteCallJava("CommonalityDest", "assemblyQuerySql", function (event:ResultEvent):void {
                    datalist = event.result as ArrayCollection;
                    counter++;
                }, sql2);

/*                var sql1:String = "select iid,cname,ccode from hr_person";
                AccessUtil.remoteCallJava("CommonalityDest", "assemblyQuerySql", function (event:ResultEvent):void {
                    personlist = event.result as ArrayCollection;
                    counter++;
                }, sql1);

                var sql1:String = "select iid,cname,ccode from hr_department";
                AccessUtil.remoteCallJava("CommonalityDest", "assemblyQuerySql", function (event:ResultEvent):void {
                    department = event.result as ArrayCollection;
                    counter++;
                }, sql1);*/

            }

			private function importButton_clickHandler(event:MouseEvent):void
			{
				
				var fileReference:FileReference=new FileReference();
				var fileFilter:FileFilter=new FileFilter("选择文件","*.xls");
				fileReference.addEventListener(Event.SELECT,function(event:Event):void{
					var url:String = "/eap1.0/FileUploadServlet?param=importdata";
					var request:URLRequest = new URLRequest(url);
					fileReference.upload(request);
				});
				fileReference.addEventListener(Event.COMPLETE,function(event:Event):void{
					AccessUtil.remoteCallJava("MrCustomerDest","importData",function(event:ResultEvent):void{
                        var ac:ArrayCollection  = event.result as ArrayCollection;
                        if(ac.length>2000){
                            CRMtool.showAlert("一次导入最多支持2000条数据，请检查您的文件。");
                            return;
                        }

                        aclist = ac;
                        checkAll.enabled = true;
						//checkAllData();
					},{filename:fileReference.name});
				});
				fileReference.browse([fileFilter]);
			}
			
			
			protected function checkAll_clickHandler(event:MouseEvent):void
			{								
				checkAllData();
			}
			
			private function checkAllData():void{
				if(aclist==null){
					CRMtool.showAlert("Excel数据无效，请检查。");
					return;
				}

                var sql1:String = "select 1";
                AccessUtil.remoteCallJava("CommonalityDest", "assemblyQuerySql", function (event:ResultEvent):void {
                    checkFlag = true;

                    clearData();

                    checkNull("姓名");
                    checkNull("所属客户");

                    checkNoEnumID("所属客户");

                    checkEnumID("性别");

                    aclist.refresh();
                    importDataButton.enabled = checkFlag;
                }, sql1,"验证数据将花费一定时间，请等待。");
			}
			
			private function clearData():void{
				for(var i:int=aclist.length-1;i>=0;i--){
					var item:Object = aclist.getItemAt(i);
					
					var flag:Boolean = true;
					var objInfo:Object=ObjectUtil.getClassInfo(item);
					var fieldName:Array=objInfo["properties"] as Array;  
					for each (var q:QName in fieldName)  
					{  
						if(CRMtool.isStringNotNull(item[q.localName])){
							flag = false;
						}						
					}
					if(flag)
						aclist.removeItemAt(i);
				}
			}
			
			
			private function checkNull(param:String):void{
				for each(var item:Object in aclist){
					if(CRMtool.isStringNull(item[param])){
						checkFlag = false;
						item[param]=errString+"空";
					}
				}
			}

            private function checkEnumID(param:String):void {

                var iclass:int = 0;

                switch (param) {
                    case "性别":
                        iclass=37;
                        break;
                    case "行业":
                        iclass = 10;
                        break;
                    case "组织形式":
                        iclass = 12;
                        break;
                    case "价值级别":
                        iclass = 15;
                        break;
                    case "销售状态":
                        iclass = 16;
                        break;
                    case "地理区域":
                        iclass = 3;
                        break;
                }

                if (iclass == 0)
                    return;

                var field:String = "";

                for each(var item:Object in aclist) {
                    if (CRMtool.isStringNotNull(item[param])) {
                        var value:String = item[param];
                        if (value && value.indexOf(errString) > -1) {
                            checkFlag = false;
                            continue;
                        }

                        if (value && value.indexOf(catchString) > -1) {
                            value = value.substr(catchString.length);
                        }

                        if (value && value.search("[\u4e00-\u9fa5]+") > -1) {//有汉字，是name
                            field = "cname";
                        } else if (value && value.match("[0-9]+") == null) {//没有汉字，没有数字，是name
                            field = "cname";
                        } else {//其他，是code
                            field = "ccode";
                        }

                        var hasObj:Object = null;
                        for each(var o:Object in datalist){
                            if(o[field]==value){
                                hasObj = o;
                                break;
                            }
                        }

                        if(hasObj){
                            if (field == "ccode") {
                                item[param] = catchString + hasObj.cname;
                            }
                            item["iid" + param] = hasObj.iid;
                        }else{
                            checkFlag = false;
                            item[param] = errString + "内码未找到,值:" + item[param];
                        }
                    } else {
                        item["iid" + param] = "";
                    }
                }
            }

            private function checkNoEnumID(param:String):void {

                var field:String = "";
                var table:String = "";

                switch (param) {
                    case "所属客户":
                        table="cs_customer";
                        break;
                    case "销售部门":
                        table = "hr_department";
                        break;
                    case "销售人员":
                        table = "hr_person";
                        break;
                    case "服务部门":
                        table = "hr_department";
                        break;
                    case "服务人员":
                        table = "hr_person";
                        break;
                }

                for each(var item:Object in aclist) {
                    if (CRMtool.isStringNotNull(item[param])) {
                        var value:String = item[param];
                        if (value && value.indexOf(errString) > -1) {
                            checkFlag = false;
                            continue;
                        }

                        if (value && value.indexOf(catchString) > -1) {
                            value = value.substr(catchString.length);
                        }

                        if (value && value.search("[\u4e00-\u9fa5]+") > -1) {
                            field = "cname";
                        } else {
                            field = "ccode";
                        }

                        var hasObj:Object = null;
                        for each(var o:Object in cslist){
                            if(o[field]==value){
                                hasObj = o;
                                break;
                            }
                        }

                        if(hasObj){
                            if (field == "ccode") {
                                item[param] = catchString + hasObj.cname;
                            }
                            item["iid" + param] = hasObj.iid;
                        }else{
                            checkFlag = false;
                            item[param] = errString + "内码未找到,值:" + item[param];
                            item["iid" + param] = null;
                        }

                    } else {
                        item["iid" + param] = "";
                    }
                }
            }
			
			private function checkFunction(field:String,param:String,sql:String){				
				AccessUtil.remoteCallJava("CommonalityDest","assemblyQuerySql",function(event:ResultEvent):void{
					var eventAC:ArrayCollection =event.result as ArrayCollection;
					if(eventAC&&eventAC.length>0){	
						var length:int = eventAC.length;
						var rvalue:String = eventAC[0].liu; 
						
						for each(var item:Object in aclist){
							if(item[param]==rvalue){
								if(length==1){
									checkFlag = false;
									item[param]=errString+"内码未找到,值:"+item[param];
                                    item["iid" + param] = null;
								}else if(length>1){
									if(field=="ccode"){
										item[param]=catchString+eventAC[1].cname;
									}
									var iid:String = eventAC[1].iid;							
									item["iid"+param]=iid;
								}
								
							}
						}
						aclist.refresh();
					}	
				},sql);
			}
			
			
			private function doLineNum(item:Object, column:DataGridColumn):String{	
				var lineNum:int = aclist.getItemIndex(item)+1;
				return lineNum+"";
			}
			
			private function button1_clickHandler(event:MouseEvent):void
			{					
				if(aclist==null||aclist.length==0){
					return;
				}
				
				if(!checkFlag){
					CRMtool.showAlert("数据有误，请检查后单击[数据验证]按钮进行验证。");
				}else{
					for each(var item:Object in aclist){
/* 						item.icustomer=item.所属客户;
						item.ccode=item.编码;
						item.cname=item.姓名;
						item.isex=item.性别;
						item.ctitle=item.称谓;
						item.cdepartment=item.部门;
						item.cpost=item.职务;
						item.bkeycontect=item.是否主联系人;
						item.cmobile1=item.手机1;
						item.cmobile2=item.手机2;
						item.ctel=item.固话;
						item.cfax=item.传真;
						item.cqqmsn=item.QQ;
						item.cemail=item.电子邮件; */
						item.istate = 326;   //在职
						item.imaker = CRMmodel.userId;
						item.dmaker = new Date();
					}
					
					
					AccessUtil.remoteCallJava("MrCustomerDest","importInCsPersonTable",function(event:ResultEvent):void{
						if(event.result as Boolean){
							CRMtool.showAlert("导入成功。");
                            _counter = 1;
                            initBasicData();
                            checkAll.enabled = false;
                            importDataButton.enabled = false;
						}
					},aclist);
					
				}
					
			}


            public function get counter():int {
                return _counter;
            }

            public function set counter(value:int):void {
                _counter = value;
                if(value == maxConter){
                    importButton.enabled = true;
                }
            }
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
		<fx:Component id="listItemRender">
			<s:MXDataGridItemRenderer>
				<fx:Script>
					<![CDATA[						
						import mx.controls.dataGridClasses.DataGridListData;
						import mx.controls.listClasses.ListData;
						import mx.states.AddChild;
						import mx.utils.StringUtil;
						
						[Bindable]
						private var textValue:String = "";
						
						override public function set data(value:Object) : void
						{
							super.data = value;
							if(!value)
								return;
							
							var param:String = this.dataGridListData.dataField;
							if(value&&value.hasOwnProperty(param)&&String(value[param]).indexOf(outerDocument.errString)!=-1){
								textInput.setStyle("color","red");
								textValue = value[param].substring(outerDocument.errString.length);    
							}else if(value&&value.hasOwnProperty(param)&&String(value[param]).indexOf(outerDocument.catchString)!=-1){
								textInput.setStyle("color","green");
								textValue = value[param].substring(outerDocument.catchString.length);    
							}else{
								textInput.setStyle("color","#000000");
								textValue = value[param];
							}
						} 
						
						private var swapString:String = "";
						
						protected function textInput_focusOutHandler(event:FocusEvent):void
						{
							if(StringUtil.trim(textInput.text)!=swapString){
								var param:String = this.dataGridListData.dataField;
								data[param] = textInput.text;
								data = data;
							}
						}
						
						protected function textInput_changeHandler(event:Event):void
						{
							//changeFlag = true;
							outerDocument.checkFlag = false;
						}
						
						protected function textInput_focusInHandler(event:FocusEvent):void
						{
							swapString =  StringUtil.trim(textInput.text);
						}
						
					]]>
				</fx:Script>
				<mx:HBox id="box" width="100%">
					<mx:TextInput id="textInput" borderVisible="false" text="{textValue}" toolTip="{textValue}" width="100%" height="100%"
								  focusIn="textInput_focusInHandler(event)"
								   focusOut="textInput_focusOutHandler(event)" change="textInput_changeHandler(event)"/>
					<!--<mx:Label id="textLabel" htmlText="{textValue}" click="textLabel_clickHandler(event)" />-->
				</mx:HBox>
			</s:MXDataGridItemRenderer>
		</fx:Component>
	</fx:Declarations>
	<mx:ApplicationControlBar width="100%" height="32" styleName="centertop">
        <mx:Button id="importButton" enabled="false" label="导入文件" click="importButton_clickHandler(event)"/>
        <mx:Text htmlText="{downloadText}" width="300"/>
        <s:Spacer width="100%"/>
        <mx:Button id="checkAll" enabled="false" label="数据验证" click="checkAll_clickHandler(event)" />
        <mx:Button id="importDataButton" enabled="false" label="数据导入" click="button1_clickHandler(event)"/>
	</mx:ApplicationControlBar>
	<mx:HBox width="100%" height="100%" paddingLeft="1" paddingRight="1">
	<mx:DataGrid id="dg" borderStyle="none" width="100%" height="100%" dataProvider="{aclist}" sortableColumns="false">
		<mx:columns>
			<mx:DataGridColumn  labelFunction="doLineNum" width="30"/>
		
			<mx:DataGridColumn dataField="所属客户"  itemRenderer="{listItemRender}" width="200"/>
			<!--<mx:DataGridColumn dataField="编码"  itemRenderer="{listItemRender}" width="80"/>	-->
			<mx:DataGridColumn dataField="姓名" itemRenderer="{listItemRender}"/>
			<mx:DataGridColumn dataField="性别" itemRenderer="{listItemRender}"/>
			<mx:DataGridColumn dataField="称谓" itemRenderer="{listItemRender}"/>
			<mx:DataGridColumn dataField="部门" itemRenderer="{listItemRender}"/>
			<mx:DataGridColumn dataField="职务" itemRenderer="{listItemRender}"/>
			<mx:DataGridColumn dataField="是否主联系人">
				<mx:itemRenderer>
					<fx:Component>
						<s:MXDataGridItemRenderer  click="mxdatagriditemrenderer1_clickHandler(event)">
							<fx:Script>
								<![CDATA[
									import mx.controls.Alert;
									import mx.events.FlexEvent;
									
									override public function set data(value:Object) : void
									{
										super.data = value;
										if(!value)
											return;
										var param:String = this.dataGridListData.dataField;
										
										if(value&&value.hasOwnProperty("bkeycontect"))
											return;
											
										
										if(value&&value.hasOwnProperty(param)){
											var valueS:String =  value[param].toString();
											if(valueS=="1"||valueS=="是"||valueS=="true"){
												data.bkeycontect=1;
												data=data;
											}											
											else{
												data.bkeycontect=0;
											}
											
										}
										
										
									}   
									
									protected function mxdatagriditemrenderer1_clickHandler(event:MouseEvent):void
									{
										if(cb.selected){
											data.bkeycontect=0;
										}else{
											data.bkeycontect=1;
										}
									}
									
									protected function cb_clickHandler(event:MouseEvent):void
									{
										if(cb.selected){
											data.bkeycontect=1;
										}else{
											data.bkeycontect=0;
										}
										event.stopPropagation();
									}									
								]]>
							</fx:Script>
							<mx:HBox width="100%" horizontalAlign="center">
								<mx:CheckBox id="cb" selected="{data.bkeycontect==1}" click="cb_clickHandler(event)"  />
							</mx:HBox>							
						</s:MXDataGridItemRenderer>
					</fx:Component>
				</mx:itemRenderer>
			</mx:DataGridColumn>
			<mx:DataGridColumn dataField="手机1" itemRenderer="{listItemRender}"/>
			<mx:DataGridColumn dataField="手机2" itemRenderer="{listItemRender}"/>
			<mx:DataGridColumn dataField="固话" itemRenderer="{listItemRender}"/>
			<mx:DataGridColumn dataField="传真" itemRenderer="{listItemRender}"/>
			<mx:DataGridColumn dataField="QQ" itemRenderer="{listItemRender}"/>
			<mx:DataGridColumn dataField="电子邮件" itemRenderer="{listItemRender}"/>
		</mx:columns>
	</mx:DataGrid>
	</mx:HBox>
	<mx:HRule width="100%"  strokeColor="#c4cccc"/>
	<mx:Text id="footHelp" htmlText="{footText}"/>
</mx:VBox>
