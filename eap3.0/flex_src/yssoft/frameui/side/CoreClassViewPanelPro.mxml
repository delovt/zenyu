<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 width="100%" currentState="basicState"
		 xmlns:renders="yssoft.renders.*"
		 xmlns:comps="yssoft.comps.*"
		 creationComplete="myinit(event)">
	<fx:Metadata>
		[Event(name="listItemClick",type="flash.events.Event")]
	</fx:Metadata>
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			import mx.events.ListEvent;
			
			import yssoft.comps.frame.FrameworkVBoxView;
			
			//是否收起
			private var _close:Boolean;
			//标题
			[Bindable]
			public var title:String;
			//绑定按钮
			private var _buttonList:ArrayCollection;
			[Bindable]
			private var _AllData:ArrayCollection;
			
			

			
			public function get AllData():ArrayCollection
			{
				return _AllData;
			}

			public function set AllData(value:ArrayCollection):void
			{
				_AllData = value;
			}
			
			
			//list数据集合
			//private var _listDatas:ArrayCollection = new ArrayCollection();
			public var listDatas:ArrayCollection = new ArrayCollection();
			[Bindable]
			public var treeDatas:XML ;
			
			protected function Title_clickHandler(event:MouseEvent):void
			{
				if(1==2){
				if(close){
					close=false;
				}else{
					close = true;
				}
				}
			}
			
			protected function titleButton_clickHandler(event:MouseEvent):void
			{
//				Alert.show((event.target as Label).text);
//				//event.stopPropagation();
//				event.stopImmediatePropagation();
			}

			public function get close():Boolean
			{
				return _close;
			}

			public function set close(value:Boolean):void
			{
				_close = value;
				if(value){
					this.currentState="closeState";
				}else{
					this.currentState="basicState";
				}
			}
			
			public function get buttonList():ArrayCollection
			{
				return _buttonList;
			}

			public function set buttonList(value:ArrayCollection):void
			{
//				_buttonList = value;
//				
//				var label:Label;
//				if(value.length==0){
//					return;			
//				}else{
//					titleButtons.removeAllChildren();
//					var s:Spacer = new Spacer();
//					s.percentWidth=100;
//					titleButtons.addChild(s);
//					
//					var i:int=0;		
//					
//					for each(var item:Object in value){
//						
//						if(i==0){	
//							label = new Label();
//							label.text = "[";
//							titleButtons.addChild(label);
//						}else{
//							label = new Label();
//							label.text = "|";
//							titleButtons.addChild(label);
//						}
//						var titleButton:Label = new Label();
//						titleButton.text = item.label;
//						titleButton.buttonMode = true;
//						titleButton.addEventListener(MouseEvent.CLICK,function(event:MouseEvent):void{
//							if(item.buttonEventListener)
//								item.buttonEventListener(event);		
//							event.stopPropagation();
//						});
//						item.button = titleButton;
//						titleButtons.addChild(titleButton);
//						i++;
//					}
//					
//				}
//				label = new Label();
//				label.text = "]";
//				titleButtons.addChild(label);
			}
			
			public function refreshListHeight():void{
				listHegithResize.heightTo = this.myTree.measureHeightOfItems();
				listHegithResize.stop();
				listHegithResize.play();		
			}
			
			public function initListDatasEventListener():void{
//				listDatas.addEventListener(CollectionEvent.COLLECTION_CHANGE,function():void{
//					refreshListHeight();
//					close = true;
//				});	
//				barShow.addEventListener(MouseEvent.MOUSE_OVER,hbox1_mouseOverHandler);
//				barShow.addEventListener(MouseEvent.MOUSE_OUT,hbox1_mouseOutHandler);
			}
			
			private function myinit(event:FlexEvent):void
			{
				initListDatasEventListener();
			}
			
			//条目内码
			public function setListSelectItem(iid:int):void{
				for each(var item:Object in listDatas){
					if(item.iid==iid){
//						myList.selectedItem = item;
					}						
				}
			}
			
			public function clearSelecte():void{
//				this.myList.selectedItem = null;
			}
			
			private function myList_itemClickHandler(event:ListEvent):void
			{
				dispatchEvent(new Event("listItemClick"));
			}
			
			protected function hbox1_mouseOverHandler(event:MouseEvent):void
			{
				
//				titleButtonsFade.alphaTo = 1;
//				titleButtonsFade.stop();
//				titleButtonsFade.play();
				
			}
			
			protected function hbox1_mouseOutHandler(event:MouseEvent):void
			{
				
//				titleButtonsFade.alphaTo = 0;
//				titleButtonsFade.stop();
//				titleButtonsFade.play();
			}
			
			public var selectedNode:XML;
			public var selectedItem:Object;


//			protected function myTree_itemClickHandler(event:ListEvent):void
//			{
////				var item:Object=myTree.selectedItem;
//				var str_iid:String=myTree.selectedItem.@iid;
//				var arr:Array =str_iid.split(".");
//				var l:int=arr.length;
//				
//				for(var i:int=0;i<l;i++){
//					Alert.show(arr[i],null);
//				}
//			}




			protected function myTree_changeHandler(event:ListEvent):void
			{
				// TODO Auto-generated method stub
				selectedItem=myTree.selectedItem;
				
				//wxh add
				(this.owner as FrameworkVBoxView).message.text = "";
				(this.owner as FrameworkVBoxView).myDesktop.styleName = "popupbuttonskin_query_gray";
			}

		]]>
	</fx:Script>
	<mx:states>
		<s:State name="basicState"/>
		<s:State name="closeState"/>
	</mx:states>
	<mx:transitions>
		<s:Transition fromState="*" toState="*">
			<!--<s:Resize target="{panelContainer}" duration="200"/>-->
		</s:Transition>
	</mx:transitions>
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
		<s:Resize id="listHegithResize" target="{myTree}" duration="200"/>
		<!--<s:Fade id="titleButtonsFade"  target="{titleButtons}" duration="200"/>-->
		<s:Resize id="listWidthResize" target="{myTree}" duration="100"/>
	</fx:Declarations>
	<mx:Tree id="myTree" width="100%" height="100%" borderVisible="false" change="myTree_changeHandler(event)" 	labelField="@cname"	dataTipField="@iid"/>
	<!--<mx:HBox width="100%"  height="25" paddingLeft="10"  styleName="frameListSideHbox" paddingTop="7" paddingRight="7" id="barShow"
			 click="Title_clickHandler(event)" >
		<s:Label styleName="frameCoreSideLabel" text="{title}"/>
		<mx:HBox id="titleButtons" width="100%" height="100%" alpha="0"/>
	</mx:HBox>
	<mx:VBox id="panelContainer" width="100%" height.basicState="100%" height.closeState="0" paddingTop="3" verticalScrollPolicy="off" horizontalScrollPolicy="off">
			<mx:Tree id="myTree" width="100%" height="100%"  change="myTree_changeHandler(event)" 	labelField="@cname"	dataTipField="@iid"/>
			<mx:HBox id="plusBox" horizontalAlign="right"  />
	
	</mx:VBox>-->
	
	
</mx:VBox>	
