<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 paddingLeft="10"  width="100%" height="100%" >
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	
	<fx:Style>
		Application{font-family:宋体;font-size:12;}
		ColumnChart{font-family:宋体;font-size:12;}
		LegendItem{font-family:宋体;font-size:12;}
		Button{fontFamily:宋体;fontSize:12;}
		DataTip{fontSize:12}
	</fx:Style>
	
	<fx:Script>
			<![CDATA[
			import mx.charts.ChartItem;
			import mx.charts.HitData;
			import mx.charts.chartClasses.IAxis;
			import mx.charts.chartClasses.Series;
			import mx.charts.series.items.ColumnSeriesItem;
			import mx.collections.ArrayCollection;
			import mx.collections.XMLListCollection;
			import mx.controls.Alert;
			import mx.events.ItemClickEvent;
			import mx.graphics.*;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.remoting.mxml.RemoteObject;
			import mx.utils.ObjectUtil;
			import mx.utils.StringUtil;
			
			
			
			private var files:Array = new Array();
			private var findex:int = 0;
			private var urlLdr:URLLoader;
			private var timer:Timer;
			private var movetimer:Timer;
			private var fills:Array = new Array();
			private var split:int = 7;
			private const SERIES_WIDTH:int =60;
			private var mv:Timer =new Timer(50);
			private var str:String=new String();
			
			//图表数据集
			[Bindable]
			private var _newArr:ArrayCollection;
			
			//表头的表体
			[Bindable]
			private var _titleLable:String;
			
			[Bindable]
			private var _cxfield:String;
			
			public function set cxfield(value:String):void
			{
				this._cxfield =value;
			}
			
			[Bindable]
			private var _cyfield:String;
				
			public function set cyfield(value:String):void
			{
				this._cyfield = value;
			}
			
			public function set titleLable(value:String):void
			{
				this._titleLable = value;
			}
			public function set newArr(value:ArrayCollection):void
			{
				this._newArr = value;
			}
			
			public function init():void{
			
			var fill:LinearGradient = new LinearGradient();
			var g1:GradientEntry = new GradientEntry((0x4F81BD), 0.00, 1.0);
			var g2:GradientEntry = new GradientEntry(0x4F81BD, 1.0, 1.0);
			fill.entries = [ g1, g2];
			fills.push(fill);
			
			fill = new LinearGradient();
			g1= new GradientEntry((0x4F81BD), 0.00, 1.0);
			g2= new GradientEntry(0x4F81BD, 1.0, 1.0);
			fill.entries = [ g1, g2];
			fills.push(fill);
			
			fill = new LinearGradient();
			g1= new GradientEntry((0x4F81BD), 0.00, 1.0);
			g2= new GradientEntry(0x4F81BD, 1.0, 1.0);
			fill.entries = [ g1, g2];
			fills.push(fill);
			
			fill = new LinearGradient();
			g1= new GradientEntry((0x4F81BD), 0.00, 1.0);
			g2= new GradientEntry(0x4F81BD, 1.0, 1.0);
			fill.entries = [ g1, g2];
			fills.push(fill);
			
			fill = new LinearGradient();
			g1= new GradientEntry((0x4F81BD), 0.00, 1.0);
			g2= new GradientEntry(0x4F81BD, 1.0, 1.0);
			fill.entries = [ g1, g2];
			fills.push(fill);
			
			fill = new LinearGradient();
			g1= new GradientEntry((0x4F81BD), 0.00, 1.0);
			g2= new GradientEntry(0x4F81BD, 1.0, 1.0);
			fill.entries = [ g1, g2];
			fills.push(fill);
			
			
			urlLdr_complete();
			
			}
			
			
			
			
			
			private function urlLdr_complete():void {
			
			nodata.visible = false;
			split = 7;
/* 			title.text = this._titleLable; */
			var allSeries:Array=new Array();
			var seriesa:ColumnSeries;
			//用于存放头部信息
			var len:int = 1;  //有几个series
			//用于放里面的个数
			var len2:int =_newArr.length;  //是否多于10条
			
			//
			/* legend.dataProvider = chart1; */
			//设置样式
			hRenderer.setStyle("showLabels", false);
			hRenderer.setStyle("showLine", false);
			hRenderer.setStyle("tickPlacement", "none");
			//获取所有里面元素
			//设置宽度(len表头个数，res.length()里面的个数)
			chart1.width = SERIES_WIDTH*(len2)+SERIES_WIDTH*(len)*3;
			//设置最大值(找出所有项中得最大值)
			var max:int = 0;
			for(var j:int=0; j<_newArr.length; j++){
			for(var jj:int=0;jj<len;jj++){
			var paramObj:Object = _newArr.getItemAt(j);
			if(paramObj[_cyfield] > max){
			max = paramObj[_cyfield] ;
			}
			} 
			}
			if(max > 1000){
			if(max>2000){
			vaxis1.interval=200;
			vaxis.interval=200;
			}
			
			vaxis.maximum = int(max*1.1);
			vaxis1.maximum = int(max*1.1);
			}else if(max > 100){
			vaxis.maximum = max+40;
			vaxis1.maximum = max+40;
			vaxis1.interval=40;
			vaxis.interval=40;
			}else {
			vaxis.maximum = max + 20;
			vaxis1.maximum = max + 20;
			vaxis1.interval=20;
			vaxis.interval=20;
			}
			chart1.dataProvider = _newArr;
			chart.dataProvider = null;
			chart.visible = true;
			chart1.visible = true;
			
			//数据每列有个数据项
			for(var ii:uint=0;ii<len;ii++){
			seriesa = new ColumnSeries();
			//表头
			seriesa.displayName = this._titleLable; 
			seriesa.yField = _cyfield;
			seriesa.xField = _cxfield;
			seriesa.name = "cname";
			seriesa.setStyle("labelPosition", "outside");
			seriesa.setStyle("fill",LinearGradient(fills[ii]));
			allSeries.push(seriesa);
			}
			chart1.series = allSeries;
			chart1.x=-9;
			
			if(len2==0 && files.length>1){
			chart.dataProvider = null;
			chart1.dataProvider = null;
			nodata.visible = true;
			
			}
			}
			private function categoryAxis_labelFunc(categoryValue:Object, prevValue:Object, axis:CategoryAxis, 
			categoryItem:Object):String{
			var str:String = categoryValue.toString();
			var b:Boolean = false;
			if(str.indexOf("...")!=-1){
			str = str.replace("...","$");
			b = true;
			}
			var str_arr:Array = new Array();
			var str_len:int = str.length;
			if(str_len > split){
			for(var i:int=0; i<28; i=i+split){
			if(i<str_len){
			str_arr.push(str.substring(i,i+split));
			}
			}
			str = str_arr.join("\n");
			}
			if(b){
			str = str.replace("$","...");
			}
			return str;
			}
		]]>
	</fx:Script>
	<mx:HBox width="100%" height="10" verticalAlign="middle">
		<!--<mx:Label id="title" fontSize="24" fontWeight="bold" width="100%" textAlign="center"/>-->
		<!--<mx:Legend id="legend" direction="horizontal" paddingRight="20"/>-->
	</mx:HBox>
	<mx:Canvas id="canv" width="100%" height="100%">
		<mx:ColumnChart id="chart" width="100%" height="100%" showDataTips="true" 
						showDataTipTargets="true"
						x="0" y="0" visible="true" gutterLeft="75" gutterBottom="65">
			<mx:horizontalAxis>
				<mx:CategoryAxis id="haxis" categoryField="{_cxfield}" labelFunction="categoryAxis_labelFunc"/>
			</mx:horizontalAxis>
			<mx:verticalAxis>
				<mx:LinearAxis  id="vaxis" baseAtZero="true" interval="40"/>
			</mx:verticalAxis>
			<mx:horizontalAxisRenderers>
				<mx:AxisRenderer id="hRenderer" axis="{haxis}" canDropLabels="true" fontFamily="黑体" 
								 fontSize="12"/>
			</mx:horizontalAxisRenderers>
			
		</mx:ColumnChart>
		<mx:Canvas id="box" width="100%" height="100%" 
				   verticalScrollPolicy="off" horizontalScrollPolicy="auto">
			<mx:ColumnChart id="chart1" height="100%"  width="100%" showDataTips="true" 
							showDataTipTargets="true" 
							x="0" y="0" visible="true" gutterLeft="75" gutterBottom="65">
				
				<mx:backgroundElements> 
					<mx:GridLines id="gridLines" 
								  verticalTickAligned="false"> 
						<mx:verticalStroke> 
							<mx:Stroke color="white" 
									   weight="0" 
									   alpha="0.0" /> 
						</mx:verticalStroke> 
						<mx:horizontalStroke> 
							<!-- Set alpha to 0 so stroke isn't visible. --> 
							<mx:Stroke color="white" 
									   weight="1" 
									   alpha="0.2" /> 
						</mx:horizontalStroke> 
						<mx:horizontalFill> 
							<mx:SolidColor color="white" 
										   alpha="0.2" /> 
						</mx:horizontalFill> 
					</mx:GridLines> 
				</mx:backgroundElements> 
				
				<mx:horizontalAxis>
					<mx:CategoryAxis id="haxis1" categoryField="{_cxfield}" labelFunction="categoryAxis_labelFunc"/>
				</mx:horizontalAxis>
				<mx:verticalAxis>
					<mx:LinearAxis id="vaxis1" baseAtZero="true" interval="40"/>
				</mx:verticalAxis>
				<mx:horizontalAxisRenderers>
					<mx:AxisRenderer axis="{haxis1}" canDropLabels="true" fontFamily="宋体" fontSize="12"/>
				</mx:horizontalAxisRenderers>
				<mx:verticalAxisRenderers>
					<mx:AxisRenderer axis="{vaxis1}" fontFamily="宋体" fontSize="12" showLabels="false"
									 showLine="false" tickPlacement="none"/>
				</mx:verticalAxisRenderers>
				<mx:series>
					<mx:ColumnSeries id="series1" yField="{_cyfield}" xField="{_cxfield}" name="{_cxfield}" 
									 labelPosition="outside">
						
					</mx:ColumnSeries>
				</mx:series>
			</mx:ColumnChart>
		</mx:Canvas>
		<mx:Box id="nodata" height="80%" width="100%" visible="false" verticalAlign="middle" horizontalAlign="center">
			<mx:Label text="没有数据" styleName="axisstyle"/>
		</mx:Box>
	</mx:Canvas>
</mx:VBox>
