<?xml version="1.0" encoding="utf-8"?>
<s:BorderContainer xmlns:fx="http://ns.adobe.com/mxml/2009"
                   xmlns:s="library://ns.adobe.com/flex/spark"
                   width="100%" height="100%"
                   borderVisible="false"
                   creationComplete="bordercontainer1_creationCompleteHandler(event)"
                   resize="resizeHandler(event)"
        >
    <fx:Script>
		<![CDATA[
        import chart.FusionCharts;

        import mx.collections.ArrayCollection;
        import mx.events.FlexEvent;
        import mx.events.ResizeEvent;

        private var _chartData:ArrayCollection = null;
        private var _chartParam:ArrayCollection = null;

        [Bindable]
        private var _FCChartType:String;


        private var _cxfield:String;
        private var _cyfield:String;

        [Bindable]
        private var basicChartParam:ArrayCollection = new ArrayCollection([
            {manageresize: '1'},

            {showpercentvalues: '0'},
            {showBorder: '0'},
            {showAboutMenuItem: "0"},
            {decimals: '2'},
            {baseFontSize: '12'},
            {baseFontColor: '#333333'},
            /*设置画布边框粗细 */
            {canvasborderthickness: '1'},
            {bgColor: '#FFFFFF'},
            /*是否显示线状图 阴影  */
            {showshadow: '0'},
            /*是否切片  */
            {issliced: "0"},
            /*折线的厚度*/
            {lineThickness: '3'},
            /*折线的颜色*/
            {lineColor: '#F6BE15'},
            /*是否启用相同视角  */
            {usesameslantangle: '1'},
            /*是否空心  */
            {ishollow: '1'},

            /*标签距离 */
            /*  {labeldistance: "5"},  */

            {is2d: "0"},
            {showplotborder: "1"},
            /*条形图边框粗细和颜色 */
            {plotborderthickness: "1"},
            {plotbordercolor: "333333"},
            {streamlineddata: "0"}
        ]);


        public function get cyfield():String {
            return _cyfield;
        }

        public function set cyfield(value:String):void {
            _cyfield = value;
        }

        public function get cxfield():String {
            return _cxfield;
        }

        public function set cxfield(value:String):void {
            _cxfield = value;
        }

        public function myinit(chartData:ArrayCollection):void {

            this.chartData = chartData;
            fc.FCData(chartData);
            fc.FCParams(chartParam);
            fc.FCRender();
        }

        public function get chartData():ArrayCollection {
            return _chartData;
        }

        public function set chartData(value:ArrayCollection):void {
            _chartData = value;
            if (value && fc) {
                if (cxfield && cyfield) {
                    for each(var item:Object in value) {
                        item.label = item[cxfield];
                        item.value = item[cyfield];
                    }
                }

                fc.FCData(value);
                if (_chartParam)
                    fc.FCParams(_chartParam);
                else
                    fc.FCParams(basicChartParam);

                fc.FCRender();
            }
        }

        public function get chartParam():ArrayCollection {
            return _chartParam;
        }

        public function set chartParam(value:ArrayCollection):void {
            _chartParam = value;
            _chartData = _chartData;
        }

        public function get FCChartType():String {
            return _FCChartType;
        }

        public function set FCChartType(value:String):void {
            _FCChartType = value;
        }

        [Bindable]
        private var _fcwidth:Number = 0;
        [Bindable]
        private var _fcheight:Number = 0;

        public function get fcheight():Number {
            return _fcheight;
        }

        public function set fcheight(value:Number):void {
            _fcheight = value;
            if (value == 0) {
                fc.percentHeight = 100;
            } else if (value > 0) {
                fc.height = value;
            }
        }

        public function get fcwidth():Number {
            return _fcwidth;
        }

        public function set fcwidth(value:Number):void {
            _fcwidth = value;
            if (value == 0) {
                fc.percentWidth = 100;
            } else if (value > 0) {
                fc.width = value;
            }
        }

        private var fc:FusionCharts;

        protected function bordercontainer1_creationCompleteHandler(event:FlexEvent):void {
            initFC();
        }

        private function initFC():void {
            this.removeAllElements();

            fc = new FusionCharts();
            fc.FCChartType = _FCChartType;
            fc.height = this.height;
            fc.width = this.width;
            //fc.percentHeight = 100;
            //fc.percentWidth = 100;
            chartData = chartData;


            this.addElement(fc);
        }

        private var _w:Number;
        private var _h:Number;

        private function resizeHandler(event:ResizeEvent):void {
            w = this.width;
            h = this.height;
        }

        public function get w():Number {
            return _w;
        }

        public function set w(value:Number):void {
            if (_w != value)
                initFC();

            _w = value;
        }

        public function get h():Number {
            return _h;
        }

        public function set h(value:Number):void {
            if (_h != value)
                initFC();
            _h = value;
        }
        ]]>
	</fx:Script>

    <fx:Declarations>
        <!-- 将非可视元素（例如服务、值对象）放在此处 -->
    </fx:Declarations>

    <!--<chart:FusionCharts id="fc" FCChartType="{_FCChartType}" width="100%" height="100%"/>-->
</s:BorderContainer>
