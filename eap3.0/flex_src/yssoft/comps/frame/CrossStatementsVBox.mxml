<?xml version="1.0" encoding="utf-8"?>
<mx:HDividedBox xmlns:fx="http://ns.adobe.com/mxml/2009"
                xmlns:s="library://ns.adobe.com/flex/spark"
                xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:frameui="yssoft.frameui.*" width="100%" height="100%"
                implements="yssoft.impls.ICRMWindow"
                xmlns:comps="yssoft.comps.*"
                creationComplete="init()" horizontalGap="0"
                xmlns:scripts="yssoft.scripts.*">
    <fx:Declarations>
        <!-- 将非可视元素（例如服务、值对象）放在此处 -->
        <s:RadioButtonGroup id="idiagramGrou"/>
    </fx:Declarations>
    <fx:Script>
		<![CDATA[
        import mx.collections.ArrayCollection;
        import mx.collections.Sort;
        import mx.collections.SortField;
        import mx.controls.Alert;
        import mx.controls.CheckBox;
        import mx.controls.TextInput;
        import mx.controls.advancedDataGridClasses.AdvancedDataGridColumn;
        import mx.controls.advancedDataGridClasses.AdvancedDataGridColumnGroup;
        import mx.events.ItemClickEvent;
        import mx.rpc.events.ResultEvent;
        import mx.utils.StringUtil;

        import spark.components.ComboBox;

        import yssoft.comps.ConsultTextInput;
        import yssoft.comps.DateControl;
        import yssoft.comps.frame.module.Basic.BasicDateField;
        import yssoft.evts.EventAdv;
        import yssoft.frameui.formopt.OperDataAuth;
        import yssoft.models.CRMmodel;
        import yssoft.models.DateHadle;
        import yssoft.scripts.CrossExportExcel;
        import yssoft.tools.AccessUtil;
        import yssoft.tools.CRMtool;
        import yssoft.views.sysmanage.AssemblyQueryclmView;
        import yssoft.vos.ListclmVo;
        import yssoft.vos.ListsetVo;

        [Bindable]
        public var itemObj:Object;

        //菜单传参
        [Bindable]
        public var winParam:Object = new Object();

        //权限类对象
        public var auth:OperDataAuth;

        //重新封装高级查询数据集
        [Bindable]
        public var advancedArr:ArrayCollection = new ArrayCollection();

        public var componentsArr:ArrayCollection = new ArrayCollection();

        //找出所有的非空验证
        [Bindable]
        public var isNotNullArr:ArrayCollection = new ArrayCollection();

        //打印模板
        [Bindable]
        private var printTemplate:ArrayCollection = new ArrayCollection([
            {cname: ""}
        ]);

        private var isAutoSearch:Boolean = false;

        private var printTpls:ComboBox;

        //交叉列集合
        public var arr_col:ArrayCollection = new ArrayCollection();
        //交叉行集合
        public var arr_row:ArrayCollection = new ArrayCollection();
        //汇总字段
        public var arr_amount:ArrayCollection = new ArrayCollection();
        //合计列
        public var arr_total:ArrayCollection = new ArrayCollection();
        //行汇总
        public var arr_rowtotal:ArrayCollection = new ArrayCollection();
        //列汇总
        public var arr_coltotal:ArrayCollection = new ArrayCollection();

        public var item_total:Object = "";

        public var col_count:int = 0;

        public var crossCol:String = "";

        [Bindable]
        public var dgSource:ArrayCollection = new ArrayCollection();
        //		private var adDG:AdvancedDataGrid = new AdvancedDataGrid();
        [Bindable]
        public var newSource:ArrayCollection = new ArrayCollection();

        private var listsql:String = "";//列表配置中的sql
        private var ctable:String = "";//功能注册中的表名
        public var tableSql:String = "";

        [Bindable]
        public var tableList:ArrayCollection;// = new ArrayCollection();

        private var datefields:Array = new Array();

        [Bindable]
        public var acListsetVo:ListsetVo = new ListsetVo();

        [Bindable]
        public var acListclmVos:ArrayCollection = new ArrayCollection();

        [Bindable]
        public static var PERSONLBRITEM:ArrayCollection = new ArrayCollection([
            /* {label:"打印",name:"onPrint"	}, */
            {label: "输出", name: "Output"        }
            //				{label: "设置", name: "SetUp"        }
        ]);

        private function init():void {
            if (itemObj == null) {
                itemObj = CRMtool.getObject(winParam);
            }
            var ifuncregedit:int = int(itemObj.ifuncregedit);
            AccessUtil.remoteCallJava("ACqueryclmDest", "getAcQueryclmList", onGetAcQueryclmListBack, ifuncregedit);


            if (itemObj == null) {
                itemObj = CRMtool.getObject(winParam);
            }
            var acListclmVo:ListclmVo = new ListclmVo();


            acListclmVo.ilist = int(itemObj.ifuncregedit);
            acListclmVo.iperson = CRMmodel.userId;

            var params:Object = new Object();
            params.ifuncregedit = itemObj.ifuncregedit;
            params.iperson = CRMmodel.userId;

            var params2:Object = new Object();
            params2.ifuncregedit = itemObj.outifuncregedit;
            params2.iperson = CRMmodel.userId;

            AccessUtil.remoteCallJava("ACListsetDest", "getListset", getListsetBack, acListclmVo);
        }

        private function getListsetBack(event:ResultEvent):void {
            acListsetVo = event.result.acListsetVo as ListsetVo;
            acListclmVos = event.result.acListclmVos as ArrayCollection;
            if (acListsetVo != null) {
                var myPattern:RegExp = /\'/g;
                listsql = acListsetVo.csql1.replace(myPattern, "\"");
                ctable = acListsetVo.ctable;
            }
        }


        private var textInputList:ArrayCollection = new ArrayCollection();
        private var arrDataList:ArrayCollection;

        private function onGetAcQueryclmListBack(evt:ResultEvent):void {
            arrDataList = evt.result as ArrayCollection;


            var _commons:ArrayCollection = new ArrayCollection();

            var co:int = 1;
            /******************* 找出所有常用条件 ***********************/
            for each(var obj:Object in arrDataList) {
                //找出常用条件
                if (String(obj.bcommon) == "true") {
                    _commons.addItem(obj);
                }

                /******************* 重新封装数据集 ***********************/
                var advancedObj:Object = new Object();
                advancedObj.logic = "and";
                advancedObj.leftParenthesis = "";
                advancedObj.cfiled = obj.cfield;
                advancedObj.ccaption = obj.ccaption;
                advancedObj.condition = "like";
                advancedObj.value = " ";
                advancedObj.rightParenthesis = " ";
                advancedArr.addItem(advancedObj);

                /******************* 封装字段名下拉框 ***********************/

                co++;
            }
            /******************* 封装组件 ***********************/
            //空值行数
            var count:int = 0;
            //动态对象集合（包括，动态主键，组件类型，和哪个字段绑定）

            for (var i:int = 0; i < _commons.length; i++) {
                var comms_Hbox:HBox = new HBox();
                comms_Hbox.styleName = "contentSubHbox";
                comms_Hbox.percentWidth = 100;
                vbx_common.addChild(comms_Hbox);

                var comms_lable:Label = new Label();
                comms_lable.styleName = "contentLabel";
                comms_lable.percentWidth = 34;
                comms_lable.text = _commons.getItemAt(i).ccaption;
                //必输项
                if (Boolean(_commons.getItemAt(i).bunnull) || _commons.getItemAt(i).bunnull == "true") {
                    comms_lable.setStyle("color", "red");
                }
                comms_Hbox.addChild(comms_lable);

                var componentsObj:Object = new Object();
                switch (int(Number(_commons.getItemAt(i).ifieldtype))) {
                    case 0:
                    {
                        var tnp_cfield;
                        if (_commons.getItemAt(i).iconsult != null && _commons.getItemAt(i).iconsult != 0) {
                            tnp_cfield = new ConsultTextInput();
                            tnp_cfield.iid = _commons.getItemAt(i).iconsult;
                            tnp_cfield.bindValueField = _commons.getItemAt(i).cconsultbkfld;
                            tnp_cfield.bindLabelField = _commons.getItemAt(i).cconsultswfld;
                            tnp_cfield.visibleIcon = true;
                            tnp_cfield.editable = true;
                            tnp_cfield.showBorder = true;
                            tnp_cfield.borderStyle = "inset";
                            tnp_cfield.clabel = comms_lable.text;

                            if (CRMtool.isStringNotNull(tnp_cfield.bindValueField) && StringUtil.trim(tnp_cfield.bindValueField) == "iid") {
                                tnp_cfield.editable = false;
                            }

                            if (null != _commons.getItemAt(i).cdefault && "" != _commons.getItemAt(i).cdefault) {
                                switch (_commons.getItemAt(i).cdefault) {
                                    case "登录人":
                                    {
                                        tnp_cfield.tnp_text_str = CRMmodel.hrperson.cname;
                                        break;
                                    }
                                    case "登录人部门":
                                    {
                                        tnp_cfield.tnp_text_str = CRMmodel.hrperson.departcname;
                                        break;
                                    }
                                }
                            }
                            else if (null != _commons.getItemAt(i).cfixdefault && "" != _commons.getItemAt(i).cfixdefault) {
                                tnp_cfield.tnp_text_str = _commons.getItemAt(i).cfixdefault;
                                tnp_cfield.value = _commons.getItemAt(i).cfixdefault;
                            }
                            tnp_cfield.onlyGetEndNode = Boolean(_commons.getItemAt(i).bconsultendbk);
                            componentsObj.type = "ConsultTextInput";

                        }
                        else if (null != _commons.getItemAt(i).cdefault && "" != _commons.getItemAt(i).cdefault) {
                            switch (_commons.getItemAt(i).cdefault) {
                                case "当前年份":
                                {
                                    tnp_cfield = new TextInput();
                                    componentsObj.type = "TextInput";
                                    tnp_cfield.text = CRMtool.getFormatDateString("YYYY");
                                    break;
                                }
                                case "当前月份":
                                {
                                    tnp_cfield = new TextInput();
                                    componentsObj.type = "TextInput";
                                    tnp_cfield.text = CRMtool.getFormatDateString("MM");
                                    if (tnp_cfield.text.substr(0, 1) == "0") {
                                        tnp_cfield.text = tnp_cfield.text.substr(1, 1);
                                    }
                                    break;
                                }
                                case "当前年月":
                                {
                                    tnp_cfield = new TextInput();
                                    componentsObj.type = "TextInput";
                                    tnp_cfield.text = CRMtool.getFormatDateString("YYYY") + CRMtool.getFormatDateString("MM");
                                    break;
                                }
                            }
                        }
                        else {
                            tnp_cfield = new TextInput();
                            componentsObj.type = "TextInput";
                            if (null != _commons.getItemAt(i).cfixdefault && "" != _commons.getItemAt(i).cfixdefault) {
                                tnp_cfield.text = _commons.getItemAt(i).cfixdefault;
                            }
                        }
                        tnp_cfield.percentWidth = 66;
                        comms_Hbox.addChild(tnp_cfield);
                        componentsObj.components = tnp_cfield;
                        componentsObj.cfield = _commons.getItemAt(i).cfield;
                        break;
                    }
                    case 1:
                    {
                        var tnp_cfield_Number:TextInput = new TextInput();
                        tnp_cfield_Number.restrict = "[0-9]";
                        tnp_cfield_Number.percentWidth = 66;
                        comms_Hbox.addChild(tnp_cfield_Number);
                        componentsObj.components = tnp_cfield_Number;
                        componentsObj.type = "TextInput";
                        if (null != _commons.getItemAt(i).cfixdefault && "" != _commons.getItemAt(i).cfixdefault) {
                            tnp_cfield_Number.text = _commons.getItemAt(i).cfixdefault;
                        }
                        if (_commons.getItemAt(i).cdefault == "当前年份") {
                            tnp_cfield_Number.text = CRMtool.getFormatDateString("YYYY");
                        }
                        if (_commons.getItemAt(i).cdefault == "上一年份") {
                            tnp_cfield_Number.text = String(int(Number(CRMtool.getFormatDateString("YYYY"))) - 1);
                        }
                        componentsObj.cfield = _commons.getItemAt(i).cfield;
                        break;
                    }
                    case 2:
                    {
                        var tnp_cfield_Float:TextInput = new TextInput();
                        tnp_cfield_Float.restrict = "[0-9]\.";
                        tnp_cfield_Float.percentWidth = 66;
                        comms_Hbox.addChild(tnp_cfield_Float);
                        componentsObj.components = tnp_cfield_Float;
                        componentsObj.type = "TextInput";
                        if (null != _commons.getItemAt(i).cfixdefault && "" != _commons.getItemAt(i).cfixdefault) {
                            tnp_cfield_Float.text = _commons.getItemAt(i).cfixdefault;
                        }
                        componentsObj.cfield = _commons.getItemAt(i).cfield;
                        break;
                    }
                    case 3:
                    {
                        var dfl_cfield:BasicDateField = new BasicDateField();
                        dfl_cfield.percentWidth = 66;
                        if (null != _commons.getItemAt(i).cdefault && "" != _commons.getItemAt(i).cdefault) {
                            switch (_commons.getItemAt(i).cdefault) {
                                case "本年":
                                {
                                    dfl_cfield.text = DateHadle.getFirstOfYear();
                                    break;
                                }
                                case "本月":
                                {
                                    dfl_cfield.text = DateHadle.getFirstOfMonth();
                                    break;
                                }
                                case "本周":
                                {
                                    dfl_cfield.text = DateHadle.getFirstOfWeek();
                                    break;
                                }
                                case "今天":
                                {
                                    dfl_cfield.text = CRMtool.getFormatDateString("YYYY-MM-DD");
                                    break;
                                }
                                case "本年第一天":
                                {
                                    dfl_cfield.text = DateHadle.getFirstOfYear();
                                    break;
                                }
                                case "本月第一天":
                                {
                                    dfl_cfield.text = DateHadle.getFirstOfMonth();
                                    break;
                                }
                                case "本周第一天":
                                {
                                    dfl_cfield.text = DateHadle.getFirstOfWeek();
                                    break;
                                }
                            }
                        }
                        comms_Hbox.addChild(dfl_cfield);
                        dfl_cfield.editable = true;
                        componentsObj.components = dfl_cfield;
                        componentsObj.type = "BasicDateField";
                        componentsObj.cfield = _commons.getItemAt(i).cfield;
                        break;
                    }
                    case 4:
                    {
                        var chbx_cfield:CheckBox = new CheckBox();
                        comms_Hbox.addChild(chbx_cfield);
                        componentsObj.components = chbx_cfield;
                        componentsObj.type = "CheckBox";
                        componentsObj.cfield = _commons.getItemAt(i).cfield;
                        break;
                    }

                    default:
                    {
                        break;
                    }
                }

                if (int(Number(_commons.getItemAt(i).icmtype)) == 1) {
                    var hbx_row1:HBox = new HBox();
                    hbx_row1.percentWidth = 100;
                    hbx_row1.styleName = "contentSubHbox";
                    vbx_common.addChild(hbx_row1);

                    var lbe_ccaption1:Label = new Label;
                    lbe_ccaption1.text = "到";
                    lbe_ccaption1.styleName = "contentLabel";
                    lbe_ccaption1.percentWidth = 34;
                    //必输项
                    if (Boolean(_commons.getItemAt(i).bunnull) || _commons.getItemAt(i).bunnull == "true") {
                        lbe_ccaption1.setStyle("color", "red");
                    }
                    hbx_row1.addChild(lbe_ccaption1);


                    switch (int(Number(_commons.getItemAt(i).ifieldtype))) {
                        case 0:
                        {
                            var tnp_cfield1:TextInput = new TextInput();
                            tnp_cfield1.percentWidth = 66;
                            hbx_row1.addChild(tnp_cfield1);
                            componentsObj.between = tnp_cfield1;
                            break;
                        }
                        case 1:
                        {
                            var tnp_cfield_Number1:TextInput = new TextInput();
                            tnp_cfield_Number1.percentWidth = 66;
                            tnp_cfield_Number1.restrict = "[0-9]";
                            hbx_row1.addChild(tnp_cfield_Number1);
                            componentsObj.between = tnp_cfield_Number1;
                            break;
                        }
                        case 2:
                        {
                            var tnp_cfield_Float1:TextInput = new TextInput();
                            tnp_cfield_Float1.percentWidth = 66;
                            tnp_cfield_Float1.restrict = "[0-9]\.";
                            hbx_row1.addChild(tnp_cfield_Float1);
                            componentsObj.between = tnp_cfield_Float1;
                            break;
                        }
                        case 3:
                        {
                            var dfl_cfield1:BasicDateField = new BasicDateField();
                            dfl_cfield1.percentWidth = 66;
                            dfl_cfield1.editable = true;
                            if (null != _commons.getItemAt(i).cdefault && "" != _commons.getItemAt(i).cdefault) {
                                switch (_commons.getItemAt(i).cdefault) {
                                    case "本年":
                                    {
                                        dfl_cfield1.text = DateHadle.getEndOfYear();
                                        break;
                                    }
                                    case "本月":
                                    {
                                        dfl_cfield1.text = DateHadle.getEndOfMonth();
                                        break;
                                    }
                                    case "本周":
                                    {
                                        dfl_cfield1.text = DateHadle.getEndOfWeek();
                                        break;
                                    }
                                    case "今天":
                                    {
                                        dfl_cfield1.text = CRMtool.getFormatDateString("YYYY-MM-DD");
                                        break;
                                    }
                                    case "本年第一天":
                                    {
                                        dfl_cfield1.text = DateHadle.getFirstOfYear();
                                        break;
                                    }
                                    case "本月第一天":
                                    {
                                        dfl_cfield1.text = DateHadle.getFirstOfMonth();
                                        break;
                                    }
                                    case "本周第一天":
                                    {
                                        dfl_cfield1.text = DateHadle.getFirstOfWeek();
                                        break;
                                    }

                                }
                            }
                            hbx_row1.addChild(dfl_cfield1);
                            componentsObj.between = dfl_cfield1;
                            break;

                        }
                        case 4:
                        {
                            var chbx_cfield1:CheckBox = new CheckBox();
                            hbx_row1.addChild(chbx_cfield1);
                            componentsObj.between = hbx_row1;
                            break;
                        }

                        default:
                        {
                            break;
                        }

                    }
                    count++;
                }
                componentsArr.addItem(componentsObj);
                if (Boolean(_commons.getItemAt(i).bunnull) || _commons.getItemAt(i).bunnull == "true") {
                    this.isNotNullArr.addItem(componentsObj);
                }
            }
            CRMtool.setTabIndex(vbx_common);

            if (itemObj.hasOwnProperty("widget")) {
                search();
            }
        }


        //查询
        public function pageInitBack(sql1:String):void {

        }

        private function cleanAll():void {
            for each(var obj:Object  in componentsArr) {
                switch (obj.type) {
                    //解析参照数据，此处取字符串值
                    case "ConsultTextInput":
                    {
                        var tnp_confield:ConsultTextInput = obj.components as ConsultTextInput;
                        tnp_confield.tnp_text_str = "";
                        break;
                    }
                    case "TextInput":
                    {
                        var tnp_cfield:TextInput = obj.components as TextInput;
                        tnp_cfield.text = "";
                        break;
                    }
                    case "DateControl":
                    {
                        var dfl_cfield:DateControl = obj.components as DateControl;
                        dfl_cfield.text = "";
                        if (obj.hasOwnProperty("between")) {
                            var dfl_between:DateControl = obj.between as DateControl;
                            dfl_between.text = "";
                        }
                        break;
                    }
                    case "CheckBox":
                    {
                        var chbx_cfield:CheckBox = obj.components as CheckBox;
                        chbx_cfield.selected = false;
                        break;
                    }
                    default:
                    {
                        break;
                    }
                }
            }
        }

        private function openWindow():void {
            var ass:AssemblyQueryclmView = new AssemblyQueryclmView();
            ass.ifuncregedit = int(itemObj.ifuncregedit);
            ass.width = 700;
            ass.height = 500;
            ass.owner = this;
            CRMtool.openView(ass);
        }

        private function search():void {
            if (this.isNotNullArr.length > 0) {
                for each(var notobj:Object in isNotNullArr) {
                    switch (notobj.type) {
                        //解析参照数据，此处取字符串值
                        case "ConsultTextInput":
                        {
                            var tnp_confield:ConsultTextInput = notobj.components as ConsultTextInput;
                            if (CRMtool.isStringNull(tnp_confield.value)) {
                                Alert.show("请输入红色必输项中的查询条件！");
                                return;
                            }
                            break;
                        }
                        case "TextInput":
                        {
                            var tnp_cfield:TextInput = notobj.components as TextInput;
                            if (CRMtool.isStringNull(tnp_cfield.text)) {
                                Alert.show("红色标签项必填！！");
                                return;
                            }
                            if (notobj.hasOwnProperty("between")) {
                                var tnp_between:TextInput = notobj.between as TextInput;
                                if (CRMtool.isStringNull(tnp_between.text)) {
                                    Alert.show("请输入红色必输项中的查询条件！");
                                    return;
                                }
                            }
                            break;
                        }
                        case "BasicDateField":
                        {
                            var dfl_cfield:BasicDateField = notobj.components as BasicDateField;
                            if (CRMtool.isStringNull(dfl_cfield.text)) {
                                Alert.show("请输入红色必输项中的查询条件！");
                                return;
                            }
                            if (notobj.hasOwnProperty("between")) {
                                var dfl_between:BasicDateField = notobj.between as BasicDateField;
                                if (CRMtool.isStringNull(dfl_between.text)) {
                                    Alert.show("请输入红色必输项中的查询条件！");
                                    return;
                                }
                            }
                            break;
                        }
                    }
                }
            }
            searchGetAcQueryclmList();
        }

        private function searchGetAcQueryclmList():void {
            if (arrDataList) {
                searchbyzj(arrDataList);
                createCrossData();

            }
        }

        private function searchbyzj(arrDataList:ArrayCollection):void {


            var sql:String = "";

            var myPattern:RegExp = /\'/g;
            /* sql = acListsetVo.csql1.replace(myPattern,"\""); */

            sql = "select * from (" + acListsetVo.csql1 + ")" + itemObj.ctable + " where 1=1 ";


            var sql1:String = "";
            for each(var obj:Object  in componentsArr) {
                switch (obj.type) {
                    //解析参照数据，此处取字符串值
                    case "ConsultTextInput":
                    {
                        var tnp_confield:ConsultTextInput = obj.components as ConsultTextInput;

                        if (CRMtool.isStringNull(tnp_confield.bindValueField)) {
                            CRMtool.showAlert("<" + tnp_confield.clabel + ">的查询配置有误，请更正。");
                            return;
                        }

                        if (StringUtil.trim(tnp_confield.bindValueField) == "iid") {
                            if (Number(tnp_confield.value) > 0) {
                                sql1 += " and " + obj.cfield;
                                sql1 += "='" + tnp_confield.value + "'";
                            } else {
                                CRMtool.showAlert("请手动选择<" + tnp_confield.clabel + ">的内容");
                                return;
                            }
                        } else if (tnp_confield.value != null && tnp_confield.value != "") {
                            sql1 += " and " + obj.cfield;
                            sql1 += " like'%" + StringUtil.trim(tnp_confield.value) + "%'";
                        }


                        break;
                    }
                    case "TextInput":
                    {
                        var tnp_cfield:TextInput = obj.components as TextInput;
                        if (CRMtool.isStringNotNull(StringUtil.trim(tnp_cfield.text))) {
                            sql1 += " and " + obj.cfield;
                            if (obj.hasOwnProperty("between")) {
                                var tnp_between:TextInput = obj.between as TextInput;
                                sql1 += " between '";
                                sql1 += tnp_cfield.text;
                                sql1 += "' and '";
                                sql1 += StringUtil.trim(tnp_between.text) + "'";
                            }
                            else {
                                sql1 += " like'%" + StringUtil.trim(tnp_cfield.text) + "%'";
                            }
                        }
                        break;
                    }
                    case "BasicDateField":
                    {
                        var dfl_cfield:BasicDateField = obj.components as BasicDateField;
                        if (CRMtool.isStringNotNull(StringUtil.trim(dfl_cfield.text))) {
                            sql1 += " and convert(varchar(10)," + obj.cfield + ",120) ";
                            if (obj.hasOwnProperty("between")) {
                                var dfl_between:BasicDateField = obj.between as BasicDateField;
                                sql1 += " between '";
                                if (CRMtool.isStringNotNull(StringUtil.trim(dfl_cfield.text))) {
                                    sql1 += StringUtil.trim(dfl_cfield.text);
                                }
                                else {
                                    dfl_cfield.text = "1900-01-01";
                                    sql1 += "1900-01-01";
                                }
                                sql1 += "' and '";
                                if (CRMtool.isStringNotNull(StringUtil.trim(dfl_between.text))) {
                                    sql1 += StringUtil.trim(dfl_between.text) + "'";
                                }
                                else {
                                    dfl_between.text = CRMtool.getFormatDateString("YYYY-MM-DD");
                                    sql1 += CRMtool.getFormatDateString("YYYY-MM-DD") + "'";

                                }
                            }
                            else {
                                sql1 += "='" + dfl_cfield.text + "'";
                            }
                        }
                        break;
                    }
                    case "CheckBox":
                    {
                        var chbx_cfield:CheckBox = obj.components as CheckBox;
                        sql1 += " and " + obj.cfield;
                        if (chbx_cfield.selected) {
                            sql1 += "='1'";
                        }
                        else {
                            sql1 += "='0'";
                        }
                        break;
                    }
                    default:
                    {
                        break;
                    }
                }
            }

            if (sql.indexOf("@childsql") != -1) {
                sql = sql.replace("@childsql", sql1);
            }
            else {
                sql += sql1;
            }
            /******************* 先排序 ***********************/
            var sort:Sort = new Sort();
            //按照优先序号升序排序
            sort.fields = [new SortField("iqryno")];
            arrDataList.sort = sort;

            var _commons:ArrayCollection = new ArrayCollection();

            var co:int = 1;
            var sortArr:ArrayCollection = new ArrayCollection();
            /******************* 找出所有常用条件 ***********************/
            for each(var obj:Object in arrDataList) {
                //找出常用条件
                if (String(obj.bcommon) == "true") {
                    _commons.addItem(obj);
                }

                /******************* 封装排序 ***********************/
                var sortObj:Object = new Object();
                sortObj.isortno = co;
                sortObj.cfiled = obj.cfield;
                sortObj.isttype = obj.isttype;
                sortObj.iid = obj.iid;
                sortArr.addItem(sortObj);
                co++;
            }

            var c:int = 0;
            for each(var sortobj:Object in sortArr) {
                if (sortobj.isttype != "" || sortobj.isttype != "0") {
                    if (c == 0) {
                        sql += " order by ";
                    }
                    else {
                        sql += ",";
                    }
                    var cfiled1:String = sortobj.cfiled as String;
                    var start:int = cfiled1.lastIndexOf(".") + 1;
                    var end:int = cfiled1.length;
                    sql += cfiled1.substring(start, end);
                    if (sortobj.isttype == "2") {
                        sql += " desc ";
                    }
                    c++;
                }
            }

            if (acListsetVo.itype == 3) {
                this.addEventListener("onGetArrtmpComplete", jcassemblyQuerySql);
                this.tableSql = sql.replace("@childsql", "");
            }
            else {
                if (acListsetVo.bpage) {
                    var paramObj:Object = new Object();
                    paramObj.pagesize = this.acListsetVo.ipage;
                    paramObj.curpage = 1;
                    paramObj.sqlid = "get_persons_sql";
                    if (sql.lastIndexOf(" order by ") != -1) {
                        var end:int = sql.lastIndexOf(" order by ");
                        var len:int = sql.length;
                        paramObj.sql = sql.substring(0, end);
                        paramObj.orderSql = sql.substring(end, len);
                    }
                    else {
                        paramObj.sql = sql;
                        paramObj.orderSql = null;
                    }
                    paramObj.ifuncregedit = int(itemObj.ifuncregedit);

                }
                else {
                    //调用后台方法
                    AccessUtil.remoteCallJava("CommonalityDest", "assemblyQuerySql", assemblyQuerySqlBack, sql);
                }
            }
        }

        public function createCrossData():void {

            arr_col.removeAll();
            arr_row.removeAll();
            arr_amount.removeAll();
            arr_total.removeAll();
            crossCol = new String;
            item_total = new Object();
            arr_coltotal.removeAll();
            arr_rowtotal.removeAll();
            col_count = 0;

            if (itemObj == null) {
                itemObj = CRMtool.getObject(winParam);
            }

            var sql_list:String = "select a.cfield,a.ifieldtype,a.ccaption,bcrossrow,bcrosscol,btotalfield,bamount,browtotal,bcoltotal,b.csql1,a.ino from AC_listclm a, AC_listset b where a.ilist=b.iid and b.ifuncregedit=" + int(itemObj.ifuncregedit) + " and (bcrossrow=1 or bcrosscol=1 or btotalfield=1) order by ino";

            //查询列表配置
            AccessUtil.remoteCallJava("CommonalityDest", "assemblyQuerySql", function (e:ResultEvent):void {

                var arr_list:ArrayCollection = e.result as ArrayCollection;
                var sql_table:String = tableSql;

                if (arr_list != null) {
                    sql_table = " ( " + sql_table + ") aa ";
                }

                var crossSql:String = " select distinct ";
                var crossSelSql:String = " select ";
                var amountSql:String = " select ";
                var groupBySql:String = " group by ";
                var amountGroupBySql:String = " group by ";
                var orderBySql:String = " order by ";
                //				var crossCol:String="";
                var amountFiled = "";
                var itotalField:int = 0;
                for (var i:int = 0; i < arr_list.length; i++) {

                    if (arr_list[i].btotalfield as Boolean) {
                        itotalField++;
                        arr_total.addItem(arr_list[i].cfield);
                        item_total[arr_list[i].cfield] = arr_list[i].ccaption;

                        if (arr_list[i].browtotal as Boolean) {//行汇总
                            arr_rowtotal.addItem(arr_list[i].cfield);
                        }
                        if (arr_list[i].bcoltotal as Boolean) {//列汇总
                            arr_coltotal.addItem(arr_list[i].cfield);
                        }

                    } else {
                        if (arr_list[i].bcrosscol as Boolean) {//交叉列

                            if (arr_list[i].ifieldtype != 0) {
                                crossSql = crossSql + "convert(nvarchar," + arr_list[i].cfield + ")+'_'+";

                            } else {
                                crossSql = crossSql + arr_list[i].cfield + "+'_'+";
                            }
                            crossCol = crossCol + arr_list[i].cfield + "_";
                            col_count++;
                        }
                        if (arr_list[i].bcrossrow as Boolean) {//交叉行
                            arr_row.addItem(arr_list[i].cfield + "_" + arr_list[i].ccaption);
                            orderBySql = orderBySql + arr_list[i].cfield + ",";
                        }
                        if (arr_list[i].bamount as Boolean) {//小计字段
                            arr_amount.addItem(arr_list[i].cfield);
                        }

                        if (crossSelSql.indexOf(arr_list[i].cfield as String) == -1) {
                            crossSelSql = crossSelSql + arr_list[i].cfield + ",";
                            amountSql = amountSql + arr_list[i].cfield + ",";
                            groupBySql = groupBySql + arr_list[i].cfield + ",";
                            amountGroupBySql = amountGroupBySql + arr_list[i].cfield + ",";
                            if (arr_list[i].bcrossrow as Boolean) {
                                if (!(arr_list[i].bamount as Boolean)) {
                                    amountSql = amountSql.replace(arr_list[i].cfield, "' ' " + arr_list[i].cfield);
                                    amountGroupBySql = amountGroupBySql.replace(arr_list[i].cfield + ",", "");
                                } else {
                                    amountSql = amountSql.substr(0, amountSql.length - 1) + "+'_合计',";
                                }
                            }
                        }

                    }
                }

                crossCol = crossCol.substr(0, crossCol.length - 1);
                if (crossCol.indexOf("_") == -1) {
                    crossCol = crossCol + "1";
                }

                for (var i:int = 0; i < arr_list.length; i++) {
                    if (arr_list[i].btotalfield as Boolean) {
                        if (itotalField > 1) {
                            crossSelSql = crossSelSql + " convert(decimal(18,2),sum(" + arr_list[i].cfield + ")) as " + crossCol + "_" + arr_list[i].cfield + ",";
                            amountSql = amountSql + " convert(decimal(18,2),sum(" + arr_list[i].cfield + ")) as " + crossCol + "_" + arr_list[i].cfield + ",";
                        } else {
                            crossSelSql = crossSelSql + " convert(decimal(18,2),sum(" + arr_list[i].cfield + ")) as " + crossCol + ",";
                            amountSql = amountSql + " convert(decimal(18,2),sum(" + arr_list[i].cfield + ")) as " + crossCol + ",";
                        }


                    }
                }

                crossSql = crossSql.substr(0, crossSql.length - 5) + " as " + crossCol + " from " + sql_table;
                crossSelSql = crossSelSql.substr(0, crossSelSql.length - 1) + " from " + sql_table;
                amountSql = amountSql.substr(0, amountSql.length - 1) + " from " + sql_table;
                groupBySql = groupBySql.substr(0, groupBySql.length - 1);
                amountGroupBySql = amountGroupBySql.substr(0, amountGroupBySql.length - 1);
                crossSelSql = crossSelSql + " " + groupBySql;
                amountSql = amountSql + " " + amountGroupBySql;

                var l_index:int = orderBySql.lastIndexOf(",");
                if (l_index > -1 && l_index == orderBySql.length - 1) {
                    orderBySql = orderBySql.substr(0, orderBySql.length - 1);
                }

                trace(crossSql);
                trace(crossSelSql + orderBySql);
                AccessUtil.remoteCallJava("CommonalityDest", "assemblyQuerySql", function (event:ResultEvent):void {
                    arr_col = event.result as ArrayCollection;//交叉列的集合6
                    AccessUtil.remoteCallJava("CommonalityDest", "assemblyQuerySql", function (e:ResultEvent):void {
                        var arr_data:ArrayCollection = e.result as ArrayCollection;
                        if (arr_data != null && arr_data.length > 0) {

                            var arr_d:ArrayCollection = convertCrossData(arr_data, arr_row, arr_col, crossCol);
                            if (arr_amount != null && arr_amount.length > 0) {//需要小计
                                arr_d = convertAmountData(arr_row, arr_col, arr_d, arr_amount);
                            }
                            if (arr_coltotal != null && arr_coltotal.length > 0) {//列汇总
                                arr_d = convertColTotalData(arr_d, arr_row);
                            }
                            if (arr_rowtotal != null && arr_rowtotal.length > 0) {
                                arr_d = convertRowTotalData(arr_d, arr_row);
                            }
                            orgAVDGData_1(arr_row, arr_col, arr_d);
                        } else {
                            CRMtool.tipAlert("查询无数据！");
                            myAVDG.dataProvider = new ArrayCollection();
                        }

                    }, crossSelSql + orderBySql);
                }, crossSql);
            }, sql_list);

        }

        /**
         * 功能：往交叉数据中添加小计数据
         * 作者：XZQWJ
         * 时间：2013-02-28
         *
         * */
        public function convertAmountData(arr_row:ArrayCollection, arr_col:ArrayCollection, arr_d:ArrayCollection, arr_amount:ArrayCollection):ArrayCollection {
            var amountData:ArrayCollection = new ArrayCollection();
            var filed:ArrayCollection = new ArrayCollection();
            filed = getFiledArr(arr_row, arr_col);
            var item:Object = getFiledItem(arr_d);
            var total:Object = getFiledItem(arr_d);


            var index:int = 0;
            var str_amount:String = "";
            for (var i:int = 0; i < arr_amount.length; i++) {
                str_amount = str_amount + arr_amount[i] + "|";
            }
            for (var i:int = 0; i < arr_row.length; i++) {
                str_amount = str_amount + arr_row[i] + "|";
            }
            for (var i:int = arr_amount.length - 1; i >= 0; i--) {
                var amonut:String = arr_amount[i] as String;
                //				str_amount=str_amount.replace(p,"@con");
                index = 0;
                for (var ii:int = arr_d.length - 1; ii >= 0; ii--) {
                    index++;
                    var o_data:Object = arr_d[ii];
                    var bool:Boolean = false;
                    for (var p:String in o_data) {

                        if (p == amonut) {
                            item[p] = o_data[p] + "【小计】";
                            continue;
                        }


                        for (var j:int = arr_amount.length - 1; j >= i; j--) {
                            var str_o:String = o_data[arr_amount[j]].toString();
                            if (str_o.indexOf("小计") != -1 || str_o.indexOf("合计") != -1) {
                                bool = true;
                                break;
                            }
                        }
                        if (bool) {
                            break;
                        } else {
                            if (str_amount.indexOf(p) == -1) {
                                if (item[p] == "" && o_data[p] == "") {

                                } else {
                                    var d:Number = Number(item[p]);
                                    d = d + Number(o_data[p]);
                                    item[p] = d.toFixed(2);
                                }
                            }
                        }

                    }
                    if (bool) {
                        continue;
                    }
                    if (ii == 0) {
                        arr_d.addItemAt(item, ii + index);
                        item = getFiledItem(arr_d);
                    } else {
                        var b:Boolean = false;
                        var index_:int = 0;
                        var i_temp:int = arr_amount.length - i;
                        for (var iii:int = ii - i_temp; iii >= 0; iii--) {

                            for (var j:int = arr_amount.length - 1; j >= i; j--) {

                                var str_o:String = arr_d[iii][arr_amount[j]].toString();//当前数据的前一条数据

                                if (str_o.indexOf("小计") != -1 || str_o.indexOf("合计") != -1) {//判断前一条数据是否含有小计或者合计

                                    b = true;
                                    break;
                                }

                            }

                            if (b) {
                                continue;
                            } else {
                                if (arr_d[ii][amonut] != arr_d[iii][amonut]) {
                                    arr_d.addItemAt(item, ii + index);
                                    item = getFiledItem(arr_d);
                                    index = 0;
                                    break;
                                } else {
                                    break;
                                }
                            }
                        }
                    }
                }
            }

            return arr_d;
        }


        /**
         * 功能：检测数据是否未小计；
         * 作者：XZQWJ
         * 时间：2013-03-12
         * 返回：如果为小计返回true;否则返回false;
         * */
        public function checkFiledValueisTotal(o_data:Object):Boolean {
            var bool:Boolean = false;
            for (var p:String in o_data) {
                if (o_data[p] == null) {
                    continue;
                }
                var s:String = o_data[p].toString();

                if (s.indexOf("小计") != -1) {
                    bool = true;
                    break;
                }
            }
            return bool
        }

        /**
         * 功能：添加列汇总；
         * 作者：XZQWJ
         * 时间：2013-03-12
         *
         * */
        public function convertColTotalData(arr_d:ArrayCollection, arr_row:ArrayCollection):ArrayCollection {
            var item:Object = getFiledItem(arr_d);
            var s:String = arr_row[0] as String;
            var s_row:String = "";
            for (var i:int = 0; i < arr_row.length; i++) {
                s_row += arr_row[i];
            }
            item[s.split("_")[0]] = "【合计】";
            for (var ii:int = arr_d.length - 1; ii >= 0; ii--) {
                var o_data:Object = arr_d[ii];
                if (checkFiledValueisTotal(o_data)) {
                    continue;
                }
                for (var p:String in o_data) {
                    if (s_row.indexOf(p) == -1) {
                        for (var j:int = 0; j < arr_coltotal.length; j++) {
                            var str_col:String = arr_coltotal[j] as String;
                            if (arr_total != null && arr_total.length == 1) {
                                var d:Number = Number(item[p]);
                                d = d + Number(o_data[p]);
                                item[p] = d.toFixed(2);
                                break;
                            } else {
                                if (p.indexOf(str_col) != -1) {
                                    var d:Number = Number(item[p]);
                                    d = d + Number(o_data[p]);
                                    item[p] = d.toFixed(2);
                                    break;
                                }
                            }
                        }

                    }
                }
            }
            arr_d.addItem(item);
            return arr_d;
        }

        /**
         * 功能：添加行汇总
         * 作者:XZQWJ
         * 时间：2013-03-12
         *
         * */
        public function convertRowTotalData(arr_d:ArrayCollection, arr_row:ArrayCollection):ArrayCollection {
            var str_row:String = "";
            for (var i:int = 0; i < arr_row.length; i++) {
                var s:String = arr_row[i].toString();
                str_row += arr_row[i];
            }

            for (var i:int = 0; i < arr_d.length; i++) {
                var o_data:Object = arr_d[i];

                for (var j:int = 0; j < arr_rowtotal.length; j++) {
                    var s_p:String = "total_" + arr_rowtotal[j].toString();
                    arr_d[i][s_p] = "";
                    var dd:Number = 0;
                    for (var p:String in arr_d[i]) {
                        if (arr_total != null && arr_total.length == 1) {
                            if (str_row.indexOf(p) == -1) {
                                dd = dd + Number(arr_d[i][p]);
                            }
                        } else {
                            if (p.indexOf(arr_rowtotal[j].toString()) != -1) {
                                dd = dd + Number(arr_d[i][p]);
                            }
                        }
                    }
                    arr_d[i][s_p] = dd.toFixed(2);
                }

            }
            return arr_d;
        }


        /**
         * 功能：生成交叉表的数据
         * 作者:XZQWJ
         * 时间:2013-02-28
         * */
        public function convertCrossData(arr_data:ArrayCollection, arr_row:ArrayCollection, arr_col:ArrayCollection, crossCol:String):ArrayCollection {
            var s_arr:Array = crossCol.split("_");

            var corssData:ArrayCollection = new ArrayCollection();

            var filedArr:ArrayCollection = new ArrayCollection();
            var filed:ArrayCollection = new ArrayCollection();
            filed = getFiledArr(arr_row, arr_col);


            var item:Object = new Object();
            item = getFiledItem(filed, 1);
            var item_back:Object = new Object;
            item_back = item;
            for (var i:int = 0; i < arr_data.length; i++) {
                var o:Object = arr_data[i];
                for (var p:String in o) {
                    for (var j:int = 0; j < arr_total.length; j++) {
                        var str_crossCol = crossCol;
                        if (arr_total.length > 1) {
                            str_crossCol = str_crossCol + "_" + arr_total[j];
                        }
                        if (p == str_crossCol) {
                            if (str_crossCol.indexOf("_") != -1) {
                                var filed_name:String = "";
                                for (var ii:int = 0; ii < s_arr.length; ii++) {
                                    filed_name = filed_name.replace("_合计", "")
                                    if (s_arr.length == 1) {
                                        var s:String = s_arr[ii] as String;
                                        s = s.substring(0, s.lastIndexOf("1"));
                                        filed_name = filed_name + o[s] + "_";
                                    } else {
                                        filed_name = filed_name + o[s_arr[ii]] + "_";
                                    }

                                }

                                if (filed_name != "") {
                                    if (arr_total.length > 1) {
                                        filed_name = filed_name + arr_total[j];
                                    } else {
                                        filed_name = filed_name.substr(0, filed_name.length - 1);
                                    }
                                    if (o[p] == "") {
                                        item[filed_name] = 0
                                    } else {
                                        item[filed_name] = o[p];
                                    }

                                }
                            } else {
                                item[o[str_crossCol.substr(0, str_crossCol.length - 1)]] = o[p];
                            }
                        } else {
                            for (var ii:int = 0; ii < arr_row.length; ii++) {
                                var str:String = arr_row[ii] as String;
                                if (str.split("_")[0] == p) {
                                    if (o[p] != "") {
                                        var p_str:String = o[p] as String;
                                        if (p_str == null) {
                                            p_str = "其他";
                                        }
                                        if (p_str.indexOf("_合计") > -1) {
                                            item[p] = "【合计】";
                                        } else {
                                            item[p] = o[p];
                                        }
                                    }

                                }
                            }

                        }
                    }
                }
                if (i != arr_data.length - 1) {
                    for (var ii:int = 0; ii < arr_row.length; ii++) {
                        var str:String = arr_row[ii] as String;
                        var pp:String = str.split("_")[0];
                        if (arr_data[i + 1][pp] != arr_data[i][pp]) {
                            corssData.addItem(item);
                            item = getFiledItem(filed, 1);
                            break;
                        }
                    }
                } else {
                    corssData.addItem(item);
                }
            }
            return corssData;
        }

        private function orgAVDGData_1(arr_row:ArrayCollection, arr_col:ArrayCollection, arr_data:ArrayCollection):void {

            myAVDG.dataProvider = arr_data;

            myAVDG.groupedColumns = getColumnGroupNames_1(arr_data, arr_row, arr_col);

            myAVDG.sortableColumns = false;
            myAVDG.sortExpertMode = false;
            myAVDG.horizontalScrollPolicy = "auto";
            myAVDG.showInAutomationHierarchy = false;
            myAVDG.headerWordWrap = true;
            myAVDG.lockedColumnCount = arr_row.length;//锁定列
            //myAVDG.setStyle("headerStyleName","headerStyle");

        }

        /**
         * 功能：将所有交叉表列的ArrayCollection集合转换成object对象
         * 作者:XZQWJ
         * 时间:2013-02-28
         *
         * */
        public function getFiledItem(filed:ArrayCollection, itype:int = 0):Object {
            var item:Object = new Object();
            if (itype != 0) {
                for (var j:int = 0; j < filed.length; j++) {
                    item[filed[j]] = "";
                }
            } else {
                for (var p:String in filed[0]) {
                    item[p] = "";
                }
            }


            return item;
        }


        /**
         * 功能：得到交叉表的所有列的ArrayCollection集合
         * 作者：XZQWJ
         * 时间:2013-02-28
         *
         * */
        public function getFiledArr(arr_row:ArrayCollection, arr_col:ArrayCollection):ArrayCollection {
            var filed:ArrayCollection = new ArrayCollection();
            var filedArr:ArrayCollection = new ArrayCollection();
            filedArr.source = arr_row.source.concat(arr_col.source);
            for (var i:int = 0; i < filedArr.length; i++) {
                if (i < arr_row.length) {
                    var s:String = filedArr[i] as String;
                    filed.addItem(s.split("_")[0]);
                } else {
                    var o:Object = filedArr[i];
                    for (var p:String in o) {
                        if (arr_total.length == 1) {
                            filed.addItem(o[p]);
                        } else {
                            for (var j:int = 0; j < arr_total.length; j++) {
                                filed.addItem(o[p] + "_" + arr_total[j]);
                            }
                        }
                    }
                }
            }
            return filed;
        }

        private function getColumnGroupNames_1(arr_data:ArrayCollection, arr_row:ArrayCollection, arr_col:ArrayCollection):Array {

            var filed:ArrayCollection = new ArrayCollection();
            filed = getFiledArr(arr_row, arr_col);
            var item:Object = new Object();
            item = getFiledItem(filed, 1);

            var columnGrouNames:Array = new Array();
            for (var i:int = 0; i < arr_row.length; i++) {
                var column:AdvancedDataGridColumn = new AdvancedDataGridColumn();
                var df_str:String = arr_row[i] as String;
                var df_arr:Array = df_str.split("_");
                column.dataField = df_arr[0];
                column.headerText = df_arr[1];
                column.width = 120;
                column.setStyle("textAlign", "left");
                columnGrouNames.push(column);

            }
            var f_str:String = "";
            var groupName:AdvancedDataGridColumnGroup = null;
            for (var i:int = 0; i < arr_col.length; i++) {

                var str:String = arr_col[i][crossCol] as String;
                var arr_str:Array = str.split("_");

                if (f_str != arr_str[0]) {
                    if (groupName != null) {
                        if (arr_total.length > 1 || col_count > 1) {
                            columnGrouNames.push(groupName);
                        }
                    }
                    groupName = new AdvancedDataGridColumnGroup();
                    groupName.headerText = arr_str[0];
                    f_str = arr_str[0];
                    if (arr_total.length > 1) {
                        if (col_count > 1) {
                            groupName.children.push(createColumnGroup(arr_str, str, 1));
                        } else {
                            groupName = createColumnGroup(arr_str, str, 0);
                        }
                    } else {
                        var column:AdvancedDataGridColumn = new AdvancedDataGridColumn();
                        column.dataField = str;
                        column.headerText = arr_str[1];
                        column.setStyle("textAlign", "right");
                        if (col_count > 1) {
                            groupName.children.push(column);
                        } else {
                            columnGrouNames.push(column);
                        }
                    }
                    if (i == arr_col.length - 1) {
                        columnGrouNames.push(groupName);
                    }
                } else {
                    var n_str:String = arr_col[i - 1][crossCol] as String;
                    var n_arr_str:Array = n_str.split("_");
                    for (var ii:int = 1; ii < col_count; ii++) {

                        if (arr_str[ii] != n_arr_str[ii]) {
                            //							groupName.headerText=arr_str[ii];
                            if (arr_total.length > 1) {
                                groupName.children.push(createColumnGroup(arr_str, str, 1));
                            } else {
                                var column:AdvancedDataGridColumn = new AdvancedDataGridColumn();
                                column.dataField = str;
                                column.headerText = arr_str[ii];
                                column.setStyle("textAlign", "right");
                                groupName.children.push(column);
                            }
                        } else {
                            continue;
                        }
                    }
                    if (i == arr_col.length - 1) {
                        columnGrouNames.push(groupName);
                    }
                }
            }
            if (arr_rowtotal.length == 1) {
                var column:AdvancedDataGridColumn = new AdvancedDataGridColumn();
                column.dataField = "total_" + arr_rowtotal[0];
                column.headerText = "【合计】";
                column.setStyle("textAlign", "right");
                columnGrouNames.push(column);
            } else if (arr_rowtotal.length > 1) {
                groupName = new AdvancedDataGridColumnGroup();
                groupName.headerText = "【合计】";
                for (var i:int = 0; i < arr_rowtotal.length; i++) {
                    var column:AdvancedDataGridColumn = new AdvancedDataGridColumn();
                    column.dataField = "total_" + arr_rowtotal[i];
                    column.headerText = item_total[arr_rowtotal[i]];
                    column.setStyle("textAlign", "right");
                    groupName.children.push(column);
                }
                columnGrouNames.push(groupName);
            }

            return columnGrouNames;
        }

        private function createColumnGroup(arr:Array, str:String, index:int = 0):AdvancedDataGridColumnGroup {
            var groupName:AdvancedDataGridColumnGroup = new AdvancedDataGridColumnGroup();
            if (col_count - 1 != index && col_count != 1) {//非最后一个
                groupName.headerText = arr[index];
                groupName.children.push(createColumnGroup(arr, str, index + 1));
                return groupName;
            } else {
                groupName.headerText = arr[index];
                for (var i:int = 0; i < arr_total.length; i++) {
                    var column:AdvancedDataGridColumn = new AdvancedDataGridColumn();
                    column.headerText = item_total[arr_total[i]];
                    column.dataField = str + "_" + arr_total[i];
                    column.setStyle("textAlign", "right");
                    groupName.children.push(column);
                }
                return groupName;
            }


            return null;
        }

        private function jcassemblyQuerySql(evt:EventAdv):void {
            AccessUtil.remoteCallJava("CommonalityDest", "assemblyQuerySql", assemblyQuerySqlBack, evt.param.toString());
        }

        private function assemblyQuerySqlBack(event:ResultEvent):void {
            this.tableList = event.result as ArrayCollection;
        }

        //窗体初始化
        public function onWindowInit():void {

        }

        //窗体打开
        public function onWindowOpen():void {
            itemObj = CRMtool.getObject(winParam);
            winParam = itemObj;
        }

        //窗体关闭,完成窗体的清理工作
        public function onWindowClose():void {

        }

        private function onItemClink(event:ItemClickEvent):void {
            var type:String = event.item.name;
            switch (type) {
                case "SetUp":
                {
                    //						if (acListsetVo.itype == 3) {
                    //							CRMtool.tipAlert("交叉表无需设置");
                    //						}
                    //						else {
                    ////							onSetup();
                    //						}
                    break;
                }
                case "Output"://XZQWJ 修改 2013-03-01
                    onOutPut();
                    break;
                default:
                    break;
            }
        }

        protected function onOutPut():void {

            if (this.myAVDG.dataProvider == null) {
                CRMtool.tipAlert("无数据输出！");
                return;
            }


            var title:String = "";
            if (itemObj != null) {
                title = itemObj.title;
            }
            if (title.indexOf("表") == -1) {
                title += "表";
            }
            CrossExportExcel.exportBySource(this.myAVDG, title + ".xls");

        }


        private function setRowColor(item:Object, color:uint, dataIndex:int):uint {
            if (arr_amount != null && arr_amount.length > 0) {
                for (var i:int = 0; i < arr_amount.length; i++) {
                    var s:String = arr_amount[i].toString();
                    var s_value:String = item[s].toString();
                    if (s_value.indexOf("小计") != -1) {
                        return 0xf4f4f4;
                    }
                }
                var arr:ArrayCollection = this.myAVDG.dataProvider as ArrayCollection;
                if (dataIndex == arr.length - 1) {
                    return 0xd2fbd1;
                }
            } else {
                return color;
            }
            return color;
        }
        ]]>
	</fx:Script>
    <mx:VBox id="sideBox" width="257" height="100%">
        <mx:VBox width="100%" height="100%" verticalGap="0" styleName="lefttree">
            <mx:ApplicationControlBar width="100%" height="32" dock="true" styleName="reportSideAppBar">
                <s:Label styleName="contentTitle" text="查询条件"/>
            </mx:ApplicationControlBar>
            <mx:VBox width="100%" height="100%" styleName="lefttree1">
                <mx:VBox id="vbx_common" width="100%" height="100%" paddingTop="10" backgroundColor="#FFFFFF">
                </mx:VBox>
                <!-- 水平分割线-->
                <mx:HRule width="100%" height="1"/>
                <mx:VBox width="100%" height="36" horizontalAlign="center" verticalAlign="middle">
                    <mx:HBox width="100%" height="100%" verticalAlign="middle" paddingLeft="10" paddingRight="10">
                        <mx:Button label="清除" click="cleanAll()" width="50" height="25"/>
                        <mx:Button label="高级" id="highLevelButton" click="openWindow();" width="50" height="25"/>
                        <s:Spacer width="100%"/>
                        <mx:Button label="查询" id="searchButton" click="search()" width="50" height="25"/>
                    </mx:HBox>
                </mx:VBox>
            </mx:VBox>
        </mx:VBox>
    </mx:VBox>
    <!--中间箭头层-->
    <frameui:FoldGapBox id="jiange" targetBox="{sideBox}"/>
    <mx:VBox width="100%" height="100%" backgroundColor="#FFFFFF" id="myTB" paddingRight="0">
        <mx:ApplicationControlBar id="appcb" width="100%" height="32" styleName="centertop1">
            <mx:HBox width="100%" horizontalAlign="right">
                <comps:LinkBarVboxComps id="lbr_role" width="15%" height="25" buttonWidth="48"
                                        dataProvider="{PERSONLBRITEM}"
                                        itemClick="onItemClink(event)"/>
            </mx:HBox>
        </mx:ApplicationControlBar>
        <scripts:MyAdvancedDataGrid id="myAVDG" width="{myTB.width}" height="100%" rowColor="setRowColor"
                                    alternatingItemColors="[0xFFFFFF,0xFFFFFF]"
                                    headerColors="[0xedeef0,0xedeef0]"
                                    headerSortSeparatorSkin="mx.skins.ProgrammaticSkin"/>
        <!-- headerColors="[0xedeef0,0xedeef0]"   alternatingItemColors="[0xEEEEEE,0xFFFFFF]" -->
    </mx:VBox>
</mx:HDividedBox>
