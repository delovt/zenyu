<?xml version="1.0" encoding="utf-8"?>
<s:MXTreeItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
					  xmlns:s="library://ns.adobe.com/flex/spark" 
					  xmlns:mx="library://ns.adobe.com/flex/mx">
	
	<fx:Script>
		<![CDATA[
			
			import mx.collections.*;
			import mx.controls.treeClasses.*;
			
			// Override the set method for the data property
			// to set the font color and style of each node.        
			override public function set data(value:Object):void {
				super.data = value;
				setStyle("color",0x000000);
				setStyle("fontWeight","normal");
				if(treeListData.hasChildren)
				{
					setStyle("color",0x000000);
					setStyle("fontWeight","normal");
					//setStyle("color", 0xff0000);
					//setStyle("fontWeight", 'bold');
					var tmp:XMLList = new XMLList(treeListData.item);
					var online:int =(tmp..node.(hasOwnProperty("@isonline") && @isonline=="1") as XMLList).length();
					var person:int=(tmp..node.(hasOwnProperty("@isonline")) as XMLList).length();
					labelDisplay.text =  treeListData.label+ "(" + online +"/"+person+ ")";
				}
				else
				{
					if(data.hasOwnProperty("@isonline")){
						
						this.labelDisplay.toolTip="电话:"+data.@ctel+",手机:"+data.@cmobile1+",邮件:"+data.@cemail;
						
						if(data.@isonline=="0"){
							//return "[离线]"+data.@cname;
							setStyle("color",0x000000);
							setStyle("fontWeight","normal");
							if(String(data.@clast) !=null && String(data.@clast) !="" ){
								labelDisplay.text="[离线]"+treeListData.label+" ["+data.@clast+"]";
							}else{
								labelDisplay.text="[离线]"+treeListData.label;
							}
						}else{
							setStyle("color", 0xff0000);
							setStyle("fontWeight", 'bold');
							setStyle("fontSize","12");
							//return "[在线]"+data.@cname;
							if(String(data.@clast) !=null && String(data.@clast) !="" ){
								labelDisplay.text="[在线]"+treeListData.label+" ["+data.@clast+"]";
							}else{
								labelDisplay.text="[在线]"+treeListData.label;
							}
							
						}
					}else{
						labelDisplay.text =  treeListData.label
					}
					
					
					//labelDisplay.text =  treeListData.label;
				}  
			}
		]]>
	</fx:Script>
	
	<s:HGroup left="0" right="0" verticalCenter="0" verticalAlign="middle">
		<s:Rect id="indentationSpacer" 
				width="{treeListData.indent}" height="22" 
				alpha="0">
			<s:fill>
				<s:SolidColor color="0xFFFFFF" />
			</s:fill>
		</s:Rect>
		<s:Group id="disclosureGroup">
			<s:BitmapImage source="{treeListData.disclosureIcon}" 
						   width="16" height="16" 
						   visible="{treeListData.hasChildren}" />
		</s:Group>
		<s:BitmapImage source="{treeListData.icon}" 
					   width="16" height="16"/>
		<s:Label id="labelDisplay"/>
	</s:HGroup>
</s:MXTreeItemRenderer>